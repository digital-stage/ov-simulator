{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx\";\nimport { createContext, useContext, useEffect, useReducer, useState } from \"react\";\nimport StageMemberReducer, { addStageMember } from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer from \"../utils/reducers/RemoteTrackReducer\";\nimport { TeckosClientWithJWT } from \"teckos-client\";\nimport TrackPresetReducer from \"../utils/reducers/TrackPresetReducer\";\nimport { ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents } from \"../utils/types/SocketEvents\";\nimport * as React from \"react\";\nimport CustomRemoteTrackReducer from \"../utils/reducers/CustomRemoteTrackReducer\";\nimport GroupReducer from \"../utils/reducers/GroupReducer\";\nimport CustomGroupReducer from \"../utils/reducers/CustomGroupReducer\";\nconst InitialState = {\n  soundCards: {\n    byId: {},\n    allIds: []\n  },\n  presets: {\n    byId: {},\n    bySoundCard: {},\n    allIds: []\n  },\n  tracks: {\n    byId: {},\n    bySoundCard: {},\n    byPreset: {},\n    allIds: []\n  },\n  groups: {\n    byId: {},\n    byStage: {},\n    allIds: []\n  },\n  customGroups: {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  },\n  stageMembers: {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  },\n  customStageMembers: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  },\n  remoteTracks: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  },\n  customRemoteTracks: {\n    byId: {},\n    byRemoteTrack: {},\n    allIds: []\n  }\n};\nconst Context = /*#__PURE__*/createContext(InitialState);\n\nconst StageProvider = props => {\n  const {\n    children,\n    token\n  } = props;\n  const {\n    1: setSocket\n  } = useState();\n  const {\n    0: device,\n    1: setDevice\n  } = useState(); // OV related entities\n\n  const {\n    0: soundCards,\n    1: dispatchSoundCard\n  } = useReducer(SoundCardReducer, InitialState.soundCards);\n  const {\n    0: presets,\n    1: dispatchPresets\n  } = useReducer(TrackPresetReducer, InitialState.presets);\n  const {\n    0: tracks,\n    1: dispatchTracks\n  } = useReducer(TrackReducer, InitialState.tracks); // Digital stage related entities\n\n  const {\n    0: groups,\n    1: dispatchGroups\n  } = useReducer(GroupReducer, InitialState.groups);\n  const {\n    0: customGroups,\n    1: dispatchCustomGroups\n  } = useReducer(CustomGroupReducer, InitialState.customGroups);\n  const {\n    0: stageMembers,\n    1: dispatchStageMembers\n  } = useReducer(StageMemberReducer, InitialState.stageMembers);\n  const {\n    0: customStageMembers,\n    1: dispatchCustomStageMembers\n  } = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n  const {\n    0: remoteTracks,\n    1: dispatchRemoteTracks\n  } = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n  const {\n    0: customRemoteTracks,\n    1: dispatchCustomRemoteTracks\n  } = useReducer(CustomRemoteTrackReducer, InitialState.customRemoteTracks);\n  useEffect(() => {\n    // Got token, register self as device\n    const initialDevice = {\n      name: 'OV Simulator',\n      canOv: true,\n      canAudio: true,\n      sendAudio: true,\n      receiveAudio: true,\n      soundCardIds: []\n    };\n    const nSocket = new TeckosClientWithJWT(process.env.NEXT_PUBLIC_API_URL, {\n      reconnection: true,\n      timeout: 1000\n    }, token, {\n      device: initialDevice\n    });\n    nSocket.on(\"connect\", () => {\n      console.log(\"connected!\");\n    });\n    nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, device => {\n      setDevice(device);\n    });\n    nSocket.on(ServerDeviceEvents.SOUND_CARD_ADDED, payload => dispatchSoundCard({\n      type: ServerDeviceEvents.SOUND_CARD_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.SOUND_CARD_CHANGED, payload => dispatchSoundCard({\n      type: ServerDeviceEvents.SOUND_CARD_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.SOUND_CARD_REMOVED, payload => dispatchSoundCard({\n      type: ServerDeviceEvents.SOUND_CARD_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_PRESET_ADDED, payload => dispatchPresets({\n      type: ServerDeviceEvents.TRACK_PRESET_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_PRESET_CHANGED, payload => dispatchPresets({\n      type: ServerDeviceEvents.TRACK_PRESET_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_PRESET_REMOVED, payload => dispatchPresets({\n      type: ServerDeviceEvents.TRACK_PRESET_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_ADDED, payload => dispatchTracks({\n      type: ServerDeviceEvents.TRACK_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_CHANGED, payload => dispatchTracks({\n      type: ServerDeviceEvents.TRACK_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_REMOVED, payload => dispatchTracks({\n      type: ServerDeviceEvents.TRACK_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.GROUP_ADDED, payload => dispatchGroups({\n      type: ServerStageEvents.GROUP_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.GROUP_CHANGED, payload => dispatchGroups({\n      type: ServerStageEvents.GROUP_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.GROUP_REMOVED, payload => dispatchGroups({\n      type: ServerStageEvents.GROUP_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_GROUP_ADDED, payload => dispatchGroups({\n      type: ServerStageEvents.GROUP_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_GROUP_CHANGED, payload => dispatchGroups({\n      type: ServerStageEvents.GROUP_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_GROUP_REMOVED, payload => dispatchGroups({\n      type: ServerStageEvents.GROUP_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, payload => dispatchCustomRemoteTracks({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, payload => dispatchCustomRemoteTracks({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, payload => dispatchCustomRemoteTracks({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerGlobalEvents.STAGE_JOINED, payload => {\n      // Handle package with many stage related entities\n      payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n      payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n        payload: customStageMember\n      }));\n      payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n        payload: ovTrack\n      }));\n      payload.customOvTracks.forEach(customRemoteTrack => dispatchCustomRemoteTracks({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n        payload: customRemoteTrack\n      }));\n    });\n    nSocket.connect();\n    setSocket(nSocket);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      device,\n      soundCards,\n      presets,\n      tracks,\n      groups,\n      customGroups,\n      stageMembers,\n      customStageMembers,\n      remoteTracks,\n      customRemoteTracks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 9\n  }, this);\n};\n\nexport { StageProvider };\n\nconst useStage = () => useContext(Context);\n\nexport default useStage;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx"],"names":["createContext","useContext","useEffect","useReducer","useState","StageMemberReducer","addStageMember","CustomStageMemberReducer","TrackReducer","SoundCardReducer","RemoteTrackReducer","TeckosClientWithJWT","TrackPresetReducer","ServerDeviceEvents","ServerGlobalEvents","ServerStageEvents","React","CustomRemoteTrackReducer","GroupReducer","CustomGroupReducer","InitialState","soundCards","byId","allIds","presets","bySoundCard","tracks","byPreset","groups","byStage","customGroups","byGroup","stageMembers","customStageMembers","byStageMember","remoteTracks","customRemoteTracks","byRemoteTrack","Context","StageProvider","props","children","token","setSocket","device","setDevice","dispatchSoundCard","dispatchPresets","dispatchTracks","dispatchGroups","dispatchCustomGroups","dispatchStageMembers","dispatchCustomStageMembers","dispatchRemoteTracks","dispatchCustomRemoteTracks","initialDevice","name","canOv","canAudio","sendAudio","receiveAudio","soundCardIds","nSocket","process","env","NEXT_PUBLIC_API_URL","reconnection","timeout","on","console","log","LOCAL_DEVICE_READY","SOUND_CARD_ADDED","payload","type","SOUND_CARD_CHANGED","SOUND_CARD_REMOVED","TRACK_PRESET_ADDED","TRACK_PRESET_CHANGED","TRACK_PRESET_REMOVED","TRACK_ADDED","TRACK_CHANGED","TRACK_REMOVED","GROUP_ADDED","GROUP_CHANGED","GROUP_REMOVED","CUSTOM_GROUP_ADDED","CUSTOM_GROUP_CHANGED","CUSTOM_GROUP_REMOVED","STAGE_MEMBER_ADDED","STAGE_MEMBER_CHANGED","STAGE_MEMBER_REMOVED","CUSTOM_STAGE_MEMBER_ADDED","CUSTOM_STAGE_MEMBER_CHANGED","CUSTOM_STAGE_MEMBER_REMOVED","STAGE_MEMBER_OV_ADDED","STAGE_MEMBER_OV_CHANGED","STAGE_MEMBER_OV_REMOVED","CUSTOM_STAGE_MEMBER_OV_ADDED","CUSTOM_STAGE_MEMBER_OV_CHANGED","CUSTOM_STAGE_MEMBER_OV_REMOVED","STAGE_JOINED","forEach","stageMember","customStageMember","ovTracks","ovTrack","customOvTracks","customRemoteTrack","connect","useStage"],"mappings":"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","sourcesContent":["import {createContext, useContext, useEffect, useReducer, useState} from \"react\";\nimport StageMemberReducer, {\n    addStageMember,\n    changeStageMember, removeStageMember,\n    StageMembers\n} from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer, {CustomStageMembers} from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer, {Tracks} from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer, {SoundCards} from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer, {RemoteTracks} from \"../utils/reducers/RemoteTrackReducer\";\nimport {ITeckosClient, TeckosClientWithJWT} from \"teckos-client\";\nimport {Device} from \"../utils/types/Device\";\nimport TrackPresetReducer, {TrackPresets} from \"../utils/reducers/TrackPresetReducer\";\nimport {ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents} from \"../utils/types/SocketEvents\";\nimport {InitialStagePackage} from \"../utils/types/InitialStagePackage\";\nimport * as React from \"react\";\nimport {StageMemberOvTrack} from \"../utils/types/StageMemberOvTrack\";\nimport CustomRemoteTrackReducer, {CustomRemoteTracks} from \"../utils/reducers/CustomRemoteTrackReducer\";\nimport {CustomRemoteOvTrack} from \"../utils/types/CustomRemoteOvTrack\";\nimport {SoundCard} from \"../utils/types/SoundCard\";\nimport {Track} from \"../utils/types/Track\";\nimport {TrackPreset} from \"../utils/types/TrackPreset\";\nimport {StageMember} from \"../utils/types/StageMember\";\nimport {CustomStageMember} from \"../utils/types/CustomStageMember\";\nimport GroupReducer, {Groups} from \"../utils/reducers/GroupReducer\";\nimport CustomGroupReducer, {CustomGroups} from \"../utils/reducers/CustomGroupReducer\";\nimport {Group} from \"../utils/types/Group\";\nimport {CustomGroup} from \"../utils/types/CustomGroup\";\n\ninterface StageContext {\n    device?: Device;\n    soundCards: SoundCards;\n    presets: TrackPresets;\n    tracks: Tracks;\n\n    groups: Groups;\n    customGroups: CustomGroups;\n    stageMembers: StageMembers;\n    customStageMembers: CustomStageMembers;\n\n    remoteTracks: RemoteTracks;\n    customRemoteTracks: CustomRemoteTracks;\n}\n\nconst InitialState: StageContext = {\n    soundCards: {\n        byId: {},\n        allIds: []\n    },\n    presets: {\n        byId: {},\n        bySoundCard: {},\n        allIds: []\n    },\n    tracks: {\n        byId: {},\n        bySoundCard: {},\n        byPreset: {},\n        allIds: []\n    },\n    groups: {\n        byId: {},\n        byStage: {},\n        allIds: []\n    },\n    customGroups: {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    },\n    stageMembers: {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    },\n    customStageMembers: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    },\n    remoteTracks: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    },\n    customRemoteTracks: {\n        byId: {},\n        byRemoteTrack: {},\n        allIds: []\n    }\n}\n\nconst Context = createContext<StageContext>(InitialState);\n\nconst StageProvider = (props: {\n    children: React.ReactNode,\n    token?: string\n}) => {\n    const {children, token} = props;\n    const [, setSocket] = useState<ITeckosClient>();\n    const [device, setDevice] = useState<Device>();\n\n    // OV related entities\n    const [soundCards, dispatchSoundCard] = useReducer(SoundCardReducer, InitialState.soundCards);\n    const [presets, dispatchPresets] = useReducer(TrackPresetReducer, InitialState.presets);\n    const [tracks, dispatchTracks] = useReducer(TrackReducer, InitialState.tracks);\n\n    // Digital stage related entities\n    const [groups, dispatchGroups] = useReducer(GroupReducer, InitialState.groups);\n    const [customGroups, dispatchCustomGroups] = useReducer(CustomGroupReducer, InitialState.customGroups);\n    const [stageMembers, dispatchStageMembers] = useReducer(StageMemberReducer, InitialState.stageMembers);\n    const [customStageMembers, dispatchCustomStageMembers] = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n    const [remoteTracks, dispatchRemoteTracks] = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n    const [customRemoteTracks, dispatchCustomRemoteTracks] = useReducer(CustomRemoteTrackReducer, InitialState.customRemoteTracks);\n\n    useEffect(() => {\n        // Got token, register self as device\n        const initialDevice: Partial<Device> = {\n            name: 'OV Simulator',\n            canOv: true,\n            canAudio: true,\n            sendAudio: true,\n            receiveAudio: true,\n            soundCardIds: [],\n        };\n\n        const nSocket = new TeckosClientWithJWT(\n            process.env.NEXT_PUBLIC_API_URL,\n            {\n                reconnection: true,\n                timeout: 1000,\n            },\n            token,\n            {\n                device: initialDevice,\n            }\n        );\n\n        nSocket.on(\"connect\", () => {\n            console.log(\"connected!\")\n        });\n\n        nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, (device: Device) => {\n            setDevice(device);\n        })\n\n        nSocket.on(ServerDeviceEvents.SOUND_CARD_ADDED, (payload: SoundCard) => dispatchSoundCard({\n            type: ServerDeviceEvents.SOUND_CARD_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.SOUND_CARD_CHANGED, (payload: SoundCard) => dispatchSoundCard({\n            type: ServerDeviceEvents.SOUND_CARD_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.SOUND_CARD_REMOVED, (payload: string) => dispatchSoundCard({\n            type: ServerDeviceEvents.SOUND_CARD_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerDeviceEvents.TRACK_PRESET_ADDED, (payload: TrackPreset) => dispatchPresets({\n            type: ServerDeviceEvents.TRACK_PRESET_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_PRESET_CHANGED, (payload: TrackPreset) => dispatchPresets({\n            type: ServerDeviceEvents.TRACK_PRESET_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_PRESET_REMOVED, (payload: string) => dispatchPresets({\n            type: ServerDeviceEvents.TRACK_PRESET_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerDeviceEvents.TRACK_ADDED, (payload: Track) => dispatchTracks({\n            type: ServerDeviceEvents.TRACK_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_CHANGED, (payload: Track) => dispatchTracks({\n            type: ServerDeviceEvents.TRACK_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_REMOVED, (payload: string) => dispatchTracks({\n            type: ServerDeviceEvents.TRACK_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.GROUP_ADDED, (payload: Group) => dispatchGroups({\n            type: ServerStageEvents.GROUP_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.GROUP_CHANGED, (payload: Group) => dispatchGroups({\n            type: ServerStageEvents.GROUP_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.GROUP_REMOVED, (payload: string) => dispatchGroups({\n            type: ServerStageEvents.GROUP_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.CUSTOM_GROUP_ADDED, (payload: CustomGroup) => dispatchGroups({\n            type: ServerStageEvents.GROUP_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_GROUP_CHANGED, (payload: CustomGroup) => dispatchGroups({\n            type: ServerStageEvents.GROUP_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_GROUP_REMOVED, (payload: string) => dispatchGroups({\n            type: ServerStageEvents.GROUP_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, (payload: StageMember) => dispatchStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, (payload: StageMember) => dispatchStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, (payload: string) => dispatchStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, (payload: CustomStageMember) => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, (payload: CustomStageMember) => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, (payload: string) => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, (payload: CustomRemoteOvTrack) => dispatchCustomRemoteTracks({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, (payload: CustomRemoteOvTrack) => dispatchCustomRemoteTracks({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchCustomRemoteTracks({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerGlobalEvents.STAGE_JOINED, (payload: InitialStagePackage) => {\n            // Handle package with many stage related entities\n            payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n            payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n                type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n                payload: customStageMember\n            }));\n            payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n                type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n                payload: ovTrack\n            }));\n            payload.customOvTracks.forEach(customRemoteTrack => dispatchCustomRemoteTracks({\n                type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n                payload: customRemoteTrack\n            }));\n        });\n\n        nSocket.connect();\n\n        setSocket(nSocket);\n    }, [token])\n\n    return (\n        <Context.Provider value={{\n            device,\n            soundCards,\n            presets,\n            tracks,\n            groups,\n            customGroups,\n            stageMembers,\n            customStageMembers,\n            remoteTracks,\n            customRemoteTracks\n        }}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport {\n    StageProvider\n}\n\nconst useStage = (): StageContext => useContext<StageContext>(Context);\nexport default useStage;\n"]},"metadata":{},"sourceType":"module"}