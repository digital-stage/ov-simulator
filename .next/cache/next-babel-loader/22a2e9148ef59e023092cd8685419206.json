{"ast":null,"code":"import _defineProperty from \"/Users/tobias/Developer/digitalstage/ov-simulator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ServerDeviceEvents } from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\n\nfunction SoundCardReducer(state, action) {\n  switch (action.type) {\n    case ServerDeviceEvents.SOUND_CARD_ADDED:\n      {\n        var soundCard = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, soundCard._id, soundCard)),\n          allIds: upsert(state.allIds, soundCard._id)\n        };\n      }\n\n    case ServerDeviceEvents.SOUND_CARD_CHANGED:\n      {\n        var _soundCard = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, _soundCard._id, _objectSpread(_objectSpread({}, state.byId[_soundCard._id]), _soundCard)))\n        });\n      }\n\n    case ServerDeviceEvents.SOUND_CARD_REMOVED:\n      {\n        var removedId = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          allIds: state.allIds.filter(function (id) {\n            return id !== removedId;\n          })\n        });\n      }\n\n    default:\n      throw new Error();\n  }\n}\n\n_c = SoundCardReducer;\nexport default SoundCardReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SoundCardReducer\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/SoundCardReducer.ts"],"names":["ServerDeviceEvents","upsert","omit","SoundCardReducer","state","action","type","SOUND_CARD_ADDED","soundCard","payload","byId","_id","allIds","SOUND_CARD_CHANGED","SOUND_CARD_REMOVED","removedId","filter","id","Error"],"mappings":";;;;;;AACA,SAAQA,kBAAR,QAAiC,uBAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAcA,SAASC,gBAAT,CAA0BC,KAA1B,EAA6CC,MAA7C,EAAkF;AAC9E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAkB,CAACO,gBAAxB;AAA0C;AACtC,YAAMC,SAAoB,GAAGH,MAAM,CAACI,OAApC;AACA,eAAO;AACHC,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECF,SAAS,CAACG,GAFX,EAEiBH,SAFjB,EADD;AAKHI,UAAAA,MAAM,EAAEX,MAAM,CAASG,KAAK,CAACQ,MAAf,EAAuBJ,SAAS,CAACG,GAAjC;AALX,SAAP;AAOH;;AACD,SAAKX,kBAAkB,CAACa,kBAAxB;AAA4C;AACxC,YAAML,UAAoB,GAAGH,MAAM,CAACI,OAApC;AAEA,+CACOL,KADP;AAEIM,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECF,UAAS,CAACG,GAFX,kCAGOP,KAAK,CAACM,IAAN,CAAWF,UAAS,CAACG,GAArB,CAHP,GAIOH,UAJP;AAFR;AAUH;;AACD,SAAKR,kBAAkB,CAACc,kBAAxB;AAA4C;AACxC,YAAMC,SAAiB,GAAGV,MAAM,CAACI,OAAjC;AACA,+CACOL,KADP;AAEIM,UAAAA,IAAI,EAAER,IAAI,CAACE,KAAK,CAACM,IAAP,EAAaK,SAAb,CAFd;AAGIH,UAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,CAAaI,MAAb,CAAoB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,KAAKF,SAAX;AAAA,WAAtB;AAHZ;AAKH;;AAED;AACI,YAAM,IAAIG,KAAJ,EAAN;AAnCR;AAqCH;;KAtCQf,gB;AAuCT,eAAeA,gBAAf","sourcesContent":["import {SoundCard} from \"../types/SoundCard\";\nimport {ServerDeviceEvents} from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\n\nexport type SoundCardAction =\n    {type: ServerDeviceEvents.SOUND_CARD_ADDED, payload: SoundCard}\n    | {type: ServerDeviceEvents.SOUND_CARD_CHANGED, payload: SoundCard}\n    | {type: ServerDeviceEvents.SOUND_CARD_REMOVED, payload: string};\n\nexport interface SoundCards {\n    byId: {\n        [id: string]: SoundCard\n    },\n    allIds: string[]\n}\n\nfunction SoundCardReducer(state: SoundCards, action: SoundCardAction): SoundCards {\n    switch (action.type) {\n        case ServerDeviceEvents.SOUND_CARD_ADDED: {\n            const soundCard: SoundCard = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [soundCard._id]: soundCard\n                },\n                allIds: upsert<string>(state.allIds, soundCard._id)\n            }\n        }\n        case ServerDeviceEvents.SOUND_CARD_CHANGED: {\n            const soundCard: SoundCard = action.payload;\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [soundCard._id]: {\n                        ...state.byId[soundCard._id],\n                        ...soundCard\n                    }\n                }\n            }\n        }\n        case ServerDeviceEvents.SOUND_CARD_REMOVED: {\n            const removedId: string = action.payload;\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n\n        default:\n            throw new Error();\n    }\n}\nexport default SoundCardReducer;\n"]},"metadata":{},"sourceType":"module"}