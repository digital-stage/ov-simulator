{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx\";\nimport { useEffect } from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport useStage, { MAC } from \"../libs/useStage\";\nimport SoundCardSimulator from \"../components/SoundCardSimulator\";\nimport SoundCardSelector from \"../components/SoundCardSelector\";\nconst email = \"test@digital-stage.org\";\nconst password = \"testtesttest\";\n\nconst Index = () => {\n  const {\n    signInWithEmailAndPassword,\n    token\n  } = useAuth();\n  const {\n    device,\n    soundCards\n  } = useStage();\n  useEffect(() => {\n    // Sign in\n    signInWithEmailAndPassword(email, password);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Usually any ov-client will do the following steps when connecting:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"1.) Get token: \", token ? \"ok\" : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"2.) Identify this Device by it's mac address '\", MAC, \"':\", device ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(device, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 31\n        }, this) : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"3.) Retrieve existing or create new sound cards:\", /*#__PURE__*/_jsxDEV(SoundCardSimulator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"The ov-client now can update the server about the connected sound cards.\", /*#__PURE__*/_jsxDEV(SoundCardSelector, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Inside the webclient we now have the following entities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Available sound cards:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: soundCards.allIds.map(id => soundCards.byId[id]).map(soundCard => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [soundCard.name, /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"PRESETS:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: /*#__PURE__*/_jsxDEV(\"li\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"ADD PRESETS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx"],"names":["useEffect","useAuth","useStage","MAC","SoundCardSimulator","SoundCardSelector","email","password","Index","signInWithEmailAndPassword","token","device","soundCards","JSON","stringify","allIds","map","id","byId","soundCard","name"],"mappings":";;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,IAAkBC,GAAlB,QAA4B,kBAA5B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,MAAMC,KAAK,GAAG,wBAAd;AACA,MAAMC,QAAQ,GAAG,cAAjB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAACC,IAAAA,0BAAD;AAA6BC,IAAAA;AAA7B,MAAsCT,OAAO,EAAnD;AACA,QAAM;AAACU,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAuBV,QAAQ,EAArC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAS,IAAAA,0BAA0B,CAACH,KAAD,EAAQC,QAAR,CAA1B;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,8BACI;AAAA,sCACoBG,KAAK,GAAG,IAAH,GAAU,YADnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,qEACmDP,GADnD,QAEKQ,MAAM,gBAAG;AAAA,oBAAME,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B;AAAN;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAkD,YAF7D;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI;AAAA,oFAEI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eAYI;AAAA,4GAEI,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBJ,eAwBI;AAAA,6BACI;AAAA,0DAEI;AAAA,oBACKC,UAAU,CAACG,MAAX,CAAkBC,GAAlB,CAAsBC,EAAE,IAAIL,UAAU,CAACM,IAAX,CAAgBD,EAAhB,CAA5B,EAAiDD,GAAjD,CAAqDG,SAAS,iBAC3D;AAAA,uBACKA,SAAS,CAACC,IADf,eAEI;AAAA,kDAEI;AAAA,uCACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkDH,CA3DD;;AA4DA,eAAeZ,KAAf","sourcesContent":["import {useEffect} from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport useStage, {MAC} from \"../libs/useStage\";\nimport SoundCardSimulator from \"../components/SoundCardSimulator\";\nimport SoundCardSelector from \"../components/SoundCardSelector\";\n\nconst email = \"test@digital-stage.org\";\nconst password = \"testtesttest\";\n\n\nconst Index = () => {\n    const {signInWithEmailAndPassword, token} = useAuth();\n    const {device, soundCards} = useStage();\n\n    useEffect(() => {\n        // Sign in\n        signInWithEmailAndPassword(email, password);\n    }, []);\n\n    return (\n        <div>\n            <p>\n                Usually any ov-client will do the following steps when connecting:\n            </p>\n            <ul>\n                <li>\n                    1.) Get token: {token ? \"ok\" : \"requesting\"}\n                </li>\n                <li>\n                    2.) Identify this Device by it's mac address '{MAC}':\n                    {device ? <pre>{JSON.stringify(device, null, 2)}</pre> : \"requesting\"}\n                </li>\n                <li>\n                    3.) Retrieve existing or create new sound cards:\n                    <SoundCardSimulator/>\n                </li>\n                <li>\n                    The ov-client now can update the server about the connected sound cards.\n                    <SoundCardSelector/>\n                </li>\n            </ul>\n            <p>\n                Inside the webclient we now have the following entities:\n            </p>\n            <ul>\n                <li>\n                    Available sound cards:\n                    <ul>\n                        {soundCards.allIds.map(id => soundCards.byId[id]).map(soundCard => (\n                            <li>\n                                {soundCard.name}\n                                <p>\n                                    PRESETS:\n                                    <ul>\n                                        <li>\n\n                                        </li>\n                                    </ul>\n                                    <button>\n                                        ADD PRESETS\n                                    </button>\n                                </p>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    )\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}