{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx\";\nimport { createContext, useContext, useEffect, useReducer, useState } from \"react\";\nimport StageMemberReducer, { addStageMember, changeStageMember, removeStageMember } from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer from \"../utils/reducers/RemoteTrackReducer\";\nimport { TeckosClientWithJWT } from \"teckos-client\";\nimport TrackPresetReducer from \"../utils/reducers/TrackPresetReducer\";\nimport { ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents } from \"../utils/types/SocketEvents\";\nimport * as React from \"react\";\nimport CustomRemoteTrackReducer from \"../utils/reducers/CustomRemoteTrackReducer\";\nconst InitialState = {\n  soundCards: {\n    byId: {},\n    allIds: []\n  },\n  presets: {\n    byId: {},\n    bySoundCard: {},\n    allIds: []\n  },\n  tracks: {\n    byId: {},\n    bySoundCard: {},\n    byPreset: {},\n    allIds: []\n  },\n  stageMembers: {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  },\n  customStageMembers: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  },\n  remoteTracks: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  }\n};\nconst Context = /*#__PURE__*/createContext(InitialState);\n\nconst StageProvider = props => {\n  const {\n    children,\n    token\n  } = props;\n  const {\n    1: setSocket\n  } = useState();\n  const {\n    0: device,\n    1: setDevice\n  } = useState(); // OV related entities\n\n  const {\n    0: soundCards,\n    1: dispatchSoundCard\n  } = useReducer(SoundCardReducer, InitialState.soundCards);\n  const {\n    0: presets,\n    1: dispatchPresets\n  } = useReducer(TrackPresetReducer, InitialState.presets);\n  const {\n    0: tracks,\n    1: dispatchTracks\n  } = useReducer(TrackReducer, InitialState.tracks); // Digital stage related entities\n\n  const {\n    0: stageMembers,\n    1: dispatchStageMembers\n  } = useReducer(StageMemberReducer, InitialState.stageMembers);\n  const {\n    0: customStageMembers,\n    1: dispatchCustomStageMembers\n  } = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n  const {\n    0: remoteTracks,\n    1: dispatchRemoteTracks\n  } = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n  const {\n    0: customRemoteTracks,\n    1: dispatchCustomRemoteTracks\n  } = useReducer(CustomRemoteTrackReducer, InitialState.customRemoteTracks);\n  useEffect(() => {\n    // Got token, register self as device\n    const initialDevice = {\n      name: 'OV Simulator',\n      canOv: true,\n      canAudio: true,\n      sendAudio: true,\n      receiveAudio: true,\n      soundCardIds: []\n    };\n    const nSocket = new TeckosClientWithJWT(process.env.NEXT_PUBLIC_API_URL, {\n      reconnection: true,\n      timeout: 1000\n    }, token, {\n      device: initialDevice\n    });\n    nSocket.on(\"connect\", () => {\n      console.log(\"connected!\");\n    });\n    nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, device => {\n      console.log(\"connected!\");\n      setDevice(device);\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers(addStageMember(payload)));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers(changeStageMember(payload)));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers(removeStageMember(payload)));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerGlobalEvents.STAGE_JOINED, payload => {\n      // Handle package with many stage related entities\n      payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n      payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n        payload: customStageMember\n      }));\n      payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n        payload: ovTrack\n      }));\n    });\n    nSocket.connect();\n    setSocket(nSocket);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      device,\n      soundCards,\n      presets,\n      tracks,\n      stageMembers,\n      customStageMembers,\n      remoteTracks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n\nexport { StageProvider };\n\nconst useStage = () => useContext(Context);\n\nexport default useStage;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx"],"names":["createContext","useContext","useEffect","useReducer","useState","StageMemberReducer","addStageMember","changeStageMember","removeStageMember","CustomStageMemberReducer","TrackReducer","SoundCardReducer","RemoteTrackReducer","TeckosClientWithJWT","TrackPresetReducer","ServerDeviceEvents","ServerGlobalEvents","ServerStageEvents","React","CustomRemoteTrackReducer","InitialState","soundCards","byId","allIds","presets","bySoundCard","tracks","byPreset","stageMembers","byGroup","customStageMembers","byStageMember","remoteTracks","Context","StageProvider","props","children","token","setSocket","device","setDevice","dispatchSoundCard","dispatchPresets","dispatchTracks","dispatchStageMembers","dispatchCustomStageMembers","dispatchRemoteTracks","customRemoteTracks","dispatchCustomRemoteTracks","initialDevice","name","canOv","canAudio","sendAudio","receiveAudio","soundCardIds","nSocket","process","env","NEXT_PUBLIC_API_URL","reconnection","timeout","on","console","log","LOCAL_DEVICE_READY","STAGE_MEMBER_ADDED","payload","STAGE_MEMBER_CHANGED","STAGE_MEMBER_REMOVED","CUSTOM_STAGE_MEMBER_ADDED","type","CUSTOM_STAGE_MEMBER_CHANGED","CUSTOM_STAGE_MEMBER_REMOVED","STAGE_MEMBER_OV_ADDED","STAGE_MEMBER_OV_CHANGED","STAGE_MEMBER_OV_REMOVED","CUSTOM_STAGE_MEMBER_OV_ADDED","CUSTOM_STAGE_MEMBER_OV_CHANGED","CUSTOM_STAGE_MEMBER_OV_REMOVED","STAGE_JOINED","forEach","stageMember","customStageMember","ovTracks","ovTrack","connect","useStage"],"mappings":";;AAAA,SAAQA,aAAR,EAAuBC,UAAvB,EAAmCC,SAAnC,EAA8CC,UAA9C,EAA0DC,QAA1D,QAAyE,OAAzE;AACA,OAAOC,kBAAP,IACIC,cADJ,EAEIC,iBAFJ,EAEuBC,iBAFvB,QAIO,sCAJP;AAKA,OAAOC,wBAAP,MAA2D,4CAA3D;AACA,OAAOC,YAAP,MAAmC,gCAAnC;AACA,OAAOC,gBAAP,MAA2C,oCAA3C;AACA,OAAOC,kBAAP,MAA+C,sCAA/C;AACA,SAAuBC,mBAAvB,QAAiD,eAAjD;AAEA,OAAOC,kBAAP,MAA+C,sCAA/C;AACA,SAAQC,kBAAR,EAA4BC,kBAA5B,EAAgDC,iBAAhD,QAAwE,6BAAxE;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,wBAAP,MAA2D,4CAA3D;AAeA,MAAMC,YAA0B,GAAG;AAC/BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,EADE;AAERC,IAAAA,MAAM,EAAE;AAFA,GADmB;AAK/BC,EAAAA,OAAO,EAAE;AACLF,IAAAA,IAAI,EAAE,EADD;AAELG,IAAAA,WAAW,EAAE,EAFR;AAGLF,IAAAA,MAAM,EAAE;AAHH,GALsB;AAU/BG,EAAAA,MAAM,EAAE;AACJJ,IAAAA,IAAI,EAAE,EADF;AAEJG,IAAAA,WAAW,EAAE,EAFT;AAGJE,IAAAA,QAAQ,EAAE,EAHN;AAIJJ,IAAAA,MAAM,EAAE;AAJJ,GAVuB;AAgB/BK,EAAAA,YAAY,EAAE;AACVN,IAAAA,IAAI,EAAE,EADI;AAEVO,IAAAA,OAAO,EAAE,EAFC;AAGVN,IAAAA,MAAM,EAAE;AAHE,GAhBiB;AAqB/BO,EAAAA,kBAAkB,EAAE;AAChBR,IAAAA,IAAI,EAAE,EADU;AAEhBS,IAAAA,aAAa,EAAE,EAFC;AAGhBR,IAAAA,MAAM,EAAE;AAHQ,GArBW;AA0B/BS,EAAAA,YAAY,EAAE;AACVV,IAAAA,IAAI,EAAE,EADI;AAEVS,IAAAA,aAAa,EAAE,EAFL;AAGVR,IAAAA,MAAM,EAAE;AAHE;AA1BiB,CAAnC;AAiCA,MAAMU,OAAO,gBAAGjC,aAAa,CAAeoB,YAAf,CAA7B;;AAEA,MAAMc,aAAa,GAAIC,KAAD,IAGhB;AACF,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAAoBF,KAA1B;AACA,QAAM;AAAA,OAAGG;AAAH,MAAgBlC,QAAQ,EAA9B;AACA,QAAM;AAAA,OAACmC,MAAD;AAAA,OAASC;AAAT,MAAsBpC,QAAQ,EAApC,CAHE,CAKF;;AACA,QAAM;AAAA,OAACiB,UAAD;AAAA,OAAaoB;AAAb,MAAkCtC,UAAU,CAACQ,gBAAD,EAAmBS,YAAY,CAACC,UAAhC,CAAlD;AACA,QAAM;AAAA,OAACG,OAAD;AAAA,OAAUkB;AAAV,MAA6BvC,UAAU,CAACW,kBAAD,EAAqBM,YAAY,CAACI,OAAlC,CAA7C;AACA,QAAM;AAAA,OAACE,MAAD;AAAA,OAASiB;AAAT,MAA2BxC,UAAU,CAACO,YAAD,EAAeU,YAAY,CAACM,MAA5B,CAA3C,CARE,CAUF;;AACA,QAAM;AAAA,OAACE,YAAD;AAAA,OAAegB;AAAf,MAAuCzC,UAAU,CAACE,kBAAD,EAAqBe,YAAY,CAACQ,YAAlC,CAAvD;AACA,QAAM;AAAA,OAACE,kBAAD;AAAA,OAAqBe;AAArB,MAAmD1C,UAAU,CAACM,wBAAD,EAA2BW,YAAY,CAACU,kBAAxC,CAAnE;AACA,QAAM;AAAA,OAACE,YAAD;AAAA,OAAec;AAAf,MAAuC3C,UAAU,CAACS,kBAAD,EAAqBQ,YAAY,CAACY,YAAlC,CAAvD;AACA,QAAM;AAAA,OAACe,kBAAD;AAAA,OAAqBC;AAArB,MAAmD7C,UAAU,CAACgB,wBAAD,EAA2BC,YAAY,CAAC2B,kBAAxC,CAAnE;AAEA7C,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAM+C,aAA8B,GAAG;AACnCC,MAAAA,IAAI,EAAE,cAD6B;AAEnCC,MAAAA,KAAK,EAAE,IAF4B;AAGnCC,MAAAA,QAAQ,EAAE,IAHyB;AAInCC,MAAAA,SAAS,EAAE,IAJwB;AAKnCC,MAAAA,YAAY,EAAE,IALqB;AAMnCC,MAAAA,YAAY,EAAE;AANqB,KAAvC;AASA,UAAMC,OAAO,GAAG,IAAI3C,mBAAJ,CACZ4C,OAAO,CAACC,GAAR,CAAYC,mBADA,EAEZ;AACIC,MAAAA,YAAY,EAAE,IADlB;AAEIC,MAAAA,OAAO,EAAE;AAFb,KAFY,EAMZxB,KANY,EAOZ;AACIE,MAAAA,MAAM,EAAEU;AADZ,KAPY,CAAhB;AAYAO,IAAAA,OAAO,CAACM,EAAR,CAAW,SAAX,EAAsB,MAAM;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACH,KAFD;AAIAR,IAAAA,OAAO,CAACM,EAAR,CAAW/C,kBAAkB,CAACkD,kBAA9B,EAAmD1B,MAAD,IAAoB;AAClEwB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAxB,MAAAA,SAAS,CAACD,MAAD,CAAT;AACH,KAHD;AAKAiB,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACiD,kBAA7B,EAAiDC,OAAO,IAAIvB,oBAAoB,CAACtC,cAAc,CAAC6D,OAAD,CAAf,CAAhF;AACAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACmD,oBAA7B,EAAmDD,OAAO,IAAIvB,oBAAoB,CAACrC,iBAAiB,CAAC4D,OAAD,CAAlB,CAAlF;AACAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACoD,oBAA7B,EAAmDF,OAAO,IAAIvB,oBAAoB,CAACpC,iBAAiB,CAAC2D,OAAD,CAAlB,CAAlF;AAEAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACqD,yBAA7B,EAAwDH,OAAO,IAAItB,0BAA0B,CAAC;AAC1F0B,MAAAA,IAAI,EAAEtD,iBAAiB,CAACqD,yBADkE;AAE1FH,MAAAA,OAAO,EAAEA;AAFiF,KAAD,CAA7F;AAIAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACuD,2BAA7B,EAA0DL,OAAO,IAAItB,0BAA0B,CAAC;AAC5F0B,MAAAA,IAAI,EAAEtD,iBAAiB,CAACuD,2BADoE;AAE5FL,MAAAA,OAAO,EAAEA;AAFmF,KAAD,CAA/F;AAIAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACwD,2BAA7B,EAA0DN,OAAO,IAAItB,0BAA0B,CAAC;AAC5F0B,MAAAA,IAAI,EAAEtD,iBAAiB,CAACwD,2BADoE;AAE5FN,MAAAA,OAAO,EAAEA;AAFmF,KAAD,CAA/F;AAKAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAACyD,qBAA7B,EAAqDP,OAAD,IAAiCrB,oBAAoB,CAAC;AACtGyB,MAAAA,IAAI,EAAEtD,iBAAiB,CAACyD,qBAD8E;AAEtGP,MAAAA,OAAO,EAAEA;AAF6F,KAAD,CAAzG;AAIAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAAC0D,uBAA7B,EAAuDR,OAAD,IAAiCrB,oBAAoB,CAAC;AACxGyB,MAAAA,IAAI,EAAEtD,iBAAiB,CAAC0D,uBADgF;AAExGR,MAAAA,OAAO,EAAEA;AAF+F,KAAD,CAA3G;AAIAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAAC2D,uBAA7B,EAAuDT,OAAD,IAAqBrB,oBAAoB,CAAC;AAC5FyB,MAAAA,IAAI,EAAEtD,iBAAiB,CAAC2D,uBADoE;AAE5FT,MAAAA,OAAO,EAAEA;AAFmF,KAAD,CAA/F;AAKAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAAC4D,4BAA7B,EAA4DV,OAAD,IAAiCtB,0BAA0B,CAAC;AACnH0B,MAAAA,IAAI,EAAEtD,iBAAiB,CAACyD,qBAD2F;AAEnHP,MAAAA,OAAO,EAAEA;AAF0G,KAAD,CAAtH;AAIAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAAC6D,8BAA7B,EAA8DX,OAAD,IAAiCrB,oBAAoB,CAAC;AAC/GyB,MAAAA,IAAI,EAAEtD,iBAAiB,CAAC0D,uBADuF;AAE/GR,MAAAA,OAAO,EAAEA;AAFsG,KAAD,CAAlH;AAIAX,IAAAA,OAAO,CAACM,EAAR,CAAW7C,iBAAiB,CAAC8D,8BAA7B,EAA8DZ,OAAD,IAAqBrB,oBAAoB,CAAC;AACnGyB,MAAAA,IAAI,EAAEtD,iBAAiB,CAAC2D,uBAD2E;AAEnGT,MAAAA,OAAO,EAAEA;AAF0F,KAAD,CAAtG;AAKAX,IAAAA,OAAO,CAACM,EAAR,CAAW9C,kBAAkB,CAACgE,YAA9B,EAA6Cb,OAAD,IAAkC;AAC1E;AACAA,MAAAA,OAAO,CAACvC,YAAR,CAAqBqD,OAArB,CAA6BC,WAAW,IAAItC,oBAAoB,CAACtC,cAAc,CAAC4E,WAAD,CAAf,CAAhE;AACAf,MAAAA,OAAO,CAACrC,kBAAR,CAA2BmD,OAA3B,CAAmCE,iBAAiB,IAAItC,0BAA0B,CAAC;AAC/E0B,QAAAA,IAAI,EAAEtD,iBAAiB,CAACqD,yBADuD;AAE/EH,QAAAA,OAAO,EAAEgB;AAFsE,OAAD,CAAlF;AAIAhB,MAAAA,OAAO,CAACiB,QAAR,CAAiBH,OAAjB,CAAyBI,OAAO,IAAIvC,oBAAoB,CAAC;AACrDyB,QAAAA,IAAI,EAAEtD,iBAAiB,CAACyD,qBAD6B;AAErDP,QAAAA,OAAO,EAAEkB;AAF4C,OAAD,CAAxD;AAIH,KAXD;AAaA7B,IAAAA,OAAO,CAAC8B,OAAR;AAEAhD,IAAAA,SAAS,CAACkB,OAAD,CAAT;AACH,GA3FQ,EA2FN,CAACnB,KAAD,CA3FM,CAAT;AA6FA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACrBE,MAAAA,MADqB;AAErBlB,MAAAA,UAFqB;AAGrBG,MAAAA,OAHqB;AAIrBE,MAAAA,MAJqB;AAKrBE,MAAAA,YALqB;AAMrBE,MAAAA,kBANqB;AAOrBE,MAAAA;AAPqB,KAAzB;AAAA,cASKI;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CA7HD;;AA+HA,SACIF,aADJ;;AAIA,MAAMqD,QAAQ,GAAG,MAAoBtF,UAAU,CAAegC,OAAf,CAA/C;;AACA,eAAesD,QAAf","sourcesContent":["import {createContext, useContext, useEffect, useReducer, useState} from \"react\";\nimport StageMemberReducer, {\n    addStageMember,\n    changeStageMember, removeStageMember,\n    StageMembers\n} from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer, {CustomStageMembers} from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer, {Tracks} from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer, {SoundCards} from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer, {RemoteTracks} from \"../utils/reducers/RemoteTrackReducer\";\nimport {ITeckosClient, TeckosClientWithJWT} from \"teckos-client\";\nimport {Device} from \"../utils/types/Device\";\nimport TrackPresetReducer, {TrackPresets} from \"../utils/reducers/TrackPresetReducer\";\nimport {ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents} from \"../utils/types/SocketEvents\";\nimport {InitialStagePackage} from \"../utils/types/InitialStagePackage\";\nimport * as React from \"react\";\nimport {StageMemberOvTrack} from \"../utils/types/StageMemberOvTrack\";\nimport CustomRemoteTrackReducer, {CustomRemoteTracks} from \"../utils/reducers/CustomRemoteTrackReducer\";\n\ninterface StageContext {\n    device?: Device;\n    soundCards: SoundCards;\n    presets: TrackPresets;\n    tracks: Tracks;\n\n    stageMembers: StageMembers;\n    customStageMembers: CustomStageMembers;\n\n    remoteTracks: RemoteTracks;\n    customRemoteTracks: CustomRemoteTracks;\n}\n\nconst InitialState: StageContext = {\n    soundCards: {\n        byId: {},\n        allIds: []\n    },\n    presets: {\n        byId: {},\n        bySoundCard: {},\n        allIds: []\n    },\n    tracks: {\n        byId: {},\n        bySoundCard: {},\n        byPreset: {},\n        allIds: []\n    },\n    stageMembers: {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    },\n    customStageMembers: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    },\n    remoteTracks: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    }\n}\n\nconst Context = createContext<StageContext>(InitialState);\n\nconst StageProvider = (props: {\n    children: React.ReactNode,\n    token?: string\n}) => {\n    const {children, token} = props;\n    const [, setSocket] = useState<ITeckosClient>();\n    const [device, setDevice] = useState<Device>();\n\n    // OV related entities\n    const [soundCards, dispatchSoundCard] = useReducer(SoundCardReducer, InitialState.soundCards);\n    const [presets, dispatchPresets] = useReducer(TrackPresetReducer, InitialState.presets);\n    const [tracks, dispatchTracks] = useReducer(TrackReducer, InitialState.tracks);\n\n    // Digital stage related entities\n    const [stageMembers, dispatchStageMembers] = useReducer(StageMemberReducer, InitialState.stageMembers);\n    const [customStageMembers, dispatchCustomStageMembers] = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n    const [remoteTracks, dispatchRemoteTracks] = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n    const [customRemoteTracks, dispatchCustomRemoteTracks] = useReducer(CustomRemoteTrackReducer, InitialState.customRemoteTracks);\n\n    useEffect(() => {\n        // Got token, register self as device\n        const initialDevice: Partial<Device> = {\n            name: 'OV Simulator',\n            canOv: true,\n            canAudio: true,\n            sendAudio: true,\n            receiveAudio: true,\n            soundCardIds: [],\n        };\n\n        const nSocket = new TeckosClientWithJWT(\n            process.env.NEXT_PUBLIC_API_URL,\n            {\n                reconnection: true,\n                timeout: 1000,\n            },\n            token,\n            {\n                device: initialDevice,\n            }\n        );\n\n        nSocket.on(\"connect\", () => {\n            console.log(\"connected!\")\n        });\n\n        nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, (device: Device) => {\n            console.log(\"connected!\")\n            setDevice(device);\n        })\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers(addStageMember(payload)));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers(changeStageMember(payload)));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers(removeStageMember(payload)));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, (payload: StageMemberOvTrack) => dispatchCustomStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerGlobalEvents.STAGE_JOINED, (payload: InitialStagePackage) => {\n            // Handle package with many stage related entities\n            payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n            payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n                type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n                payload: customStageMember\n            }));\n            payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n                type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n                payload: ovTrack\n            }));\n        });\n\n        nSocket.connect();\n\n        setSocket(nSocket);\n    }, [token])\n\n    return (\n        <Context.Provider value={{\n            device,\n            soundCards,\n            presets,\n            tracks,\n            stageMembers,\n            customStageMembers,\n            remoteTracks\n        }}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport {\n    StageProvider\n}\n\nconst useStage = (): StageContext => useContext<StageContext>(Context);\nexport default useStage;\n"]},"metadata":{},"sourceType":"module"}