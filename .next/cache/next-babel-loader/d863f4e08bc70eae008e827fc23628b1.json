{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ServerDeviceEvents } from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\n\nfunction SoundCardReducer(state = {\n  byId: {},\n  allIds: []\n}, action) {\n  switch (action.type) {\n    case ServerDeviceEvents.SOUND_CARD_ADDED:\n      {\n        const soundCard = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, {\n            [soundCard._id]: soundCard\n          }),\n          allIds: upsert(state.allIds, soundCard._id)\n        };\n      }\n\n    case ServerDeviceEvents.SOUND_CARD_CHANGED:\n      {\n        const soundCard = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, {\n            [soundCard._id]: _objectSpread(_objectSpread({}, state.byId[soundCard._id]), soundCard)\n          })\n        });\n      }\n\n    case ServerDeviceEvents.SOUND_CARD_REMOVED:\n      {\n        const removedId = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          allIds: state.allIds.filter(id => id !== removedId)\n        });\n      }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport default SoundCardReducer;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/SoundCardReducer.ts"],"names":["ServerDeviceEvents","upsert","omit","SoundCardReducer","state","byId","allIds","action","type","SOUND_CARD_ADDED","soundCard","payload","_id","SOUND_CARD_CHANGED","SOUND_CARD_REMOVED","removedId","filter","id","Error"],"mappings":";;;;;;AACA,SAAQA,kBAAR,QAAiC,uBAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAcA,SAASC,gBAAT,CAA0BC,KAAiB,GAAG;AAC1CC,EAAAA,IAAI,EAAE,EADoC;AAE1CC,EAAAA,MAAM,EAAE;AAFkC,CAA9C,EAGGC,MAHH,EAMe;AACX,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,kBAAkB,CAACS,gBAAxB;AAA0C;AACtC,cAAMC,SAAoB,GAAGH,MAAM,CAACI,OAApC;AACA,eAAO;AACHN,UAAAA,IAAI,kCACGD,KAAK,CAACC,IADT;AAEA,aAACK,SAAS,CAACE,GAAX,GAAiBF;AAFjB,YADD;AAKHJ,UAAAA,MAAM,EAAEL,MAAM,CAASG,KAAK,CAACE,MAAf,EAAuBI,SAAS,CAACE,GAAjC;AALX,SAAP;AAOH;;AACD,SAAKZ,kBAAkB,CAACa,kBAAxB;AAA4C;AACxC,cAAMH,SAAoB,GAAGH,MAAM,CAACI,OAApC;AAEA,+CACOP,KADP;AAEIC,UAAAA,IAAI,kCACGD,KAAK,CAACC,IADT;AAEA,aAACK,SAAS,CAACE,GAAX,mCACOR,KAAK,CAACC,IAAN,CAAWK,SAAS,CAACE,GAArB,CADP,GAEOF,SAFP;AAFA;AAFR;AAUH;;AACD,SAAKV,kBAAkB,CAACc,kBAAxB;AAA4C;AACxC,cAAMC,SAAiB,GAAGR,MAAM,CAACI,OAAjC;AACA,+CACOP,KADP;AAEIC,UAAAA,IAAI,EAAEH,IAAI,CAACE,KAAK,CAACC,IAAP,EAAaU,SAAb,CAFd;AAGIT,UAAAA,MAAM,EAAEF,KAAK,CAACE,MAAN,CAAaU,MAAb,CAAoBC,EAAE,IAAIA,EAAE,KAAKF,SAAjC;AAHZ;AAKH;;AAED;AACI,YAAM,IAAIG,KAAJ,EAAN;AAnCR;AAqCH;;AACD,eAAef,gBAAf","sourcesContent":["import {SoundCard} from \"../types/SoundCard\";\nimport {ServerDeviceEvents} from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\n\nexport type SoundCardAction =\n    {type: ServerDeviceEvents.SOUND_CARD_ADDED, payload: SoundCard}\n    | {type: ServerDeviceEvents.SOUND_CARD_CHANGED, payload: SoundCard}\n    | {type: ServerDeviceEvents.SOUND_CARD_REMOVED, payload: string};\n\nexport interface SoundCards {\n    byId: {\n        [id: string]: SoundCard\n    },\n    allIds: string[]\n}\n\nfunction SoundCardReducer(state: SoundCards = {\n    byId: {},\n    allIds: []\n}, action: {\n    type: string;\n    payload: any;\n}): SoundCards {\n    switch (action.type) {\n        case ServerDeviceEvents.SOUND_CARD_ADDED: {\n            const soundCard: SoundCard = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [soundCard._id]: soundCard\n                },\n                allIds: upsert<string>(state.allIds, soundCard._id)\n            }\n        }\n        case ServerDeviceEvents.SOUND_CARD_CHANGED: {\n            const soundCard: SoundCard = action.payload;\n\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [soundCard._id]: {\n                        ...state.byId[soundCard._id],\n                        ...soundCard\n                    }\n                }\n            }\n        }\n        case ServerDeviceEvents.SOUND_CARD_REMOVED: {\n            const removedId: string = action.payload;\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n\n        default:\n            throw new Error();\n    }\n}\nexport default SoundCardReducer;\n"]},"metadata":{},"sourceType":"module"}