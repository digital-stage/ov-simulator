{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useReducer, useState } from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport { TeckosClientWithJWT } from 'teckos-client';\nimport { ServerDeviceEvents } from \"../utils/types/SocketEvents\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport StageMemberReducer from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nvar email = \"test@digital-stage.org\";\nvar password = \"testtesttest\";\n\nvar Index = function Index() {\n  _s();\n\n  var _useAuth = useAuth(),\n      signInWithEmailAndPassword = _useAuth.signInWithEmailAndPassword,\n      token = _useAuth.token;\n\n  var _useState = useState(),\n      socket = _useState[0],\n      setSocket = _useState[1];\n\n  var _useState2 = useState(),\n      device = _useState2[0],\n      setDevice = _useState2[1];\n\n  var _useReducer = useReducer(StageMemberReducer, {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  }),\n      stageMembers = _useReducer[0],\n      dispatchStageMembers = _useReducer[1];\n\n  var _useReducer2 = useReducer(CustomStageMemberReducer, {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  }),\n      customStageMembers = _useReducer2[0],\n      dispatchCustomStageMembers = _useReducer2[1];\n\n  var _useReducer3 = useReducer(SoundCardReducer, {\n    byId: {},\n    allIds: []\n  }),\n      soundCards = _useReducer3[0],\n      dispatchSoundCard = _useReducer3[1];\n\n  var _useState3 = useState(),\n      presets = _useState3[0],\n      setPresets = _useState3[1];\n\n  useEffect(function () {\n    // Sign in\n    signInWithEmailAndPassword(email, password);\n  }, []);\n  useEffect(function () {\n    // Got token, register self as device\n    var initialDevice = {\n      name: 'OV Simulator',\n      canOv: true,\n      canAudio: true,\n      sendAudio: true,\n      receiveAudio: true,\n      soundCardIds: []\n    };\n    var nSocket = new TeckosClientWithJWT(process.env.NEXT_PUBLIC_API_URL, {\n      reconnection: true,\n      timeout: 1000\n    }, token, {\n      device: initialDevice\n    });\n    nSocket.on(\"connect\", function () {\n      console.log(\"connected!\");\n    });\n    nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, function (device) {\n      console.log(\"connected!\");\n      setDevice(device);\n    });\n    nSocket.connect();\n    setSocket(nSocket);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Token: \", token ? \"ok\" : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Device:\", device ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(device, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 31\n        }, _this) : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Index, \"PyetL7GRq2KDGUdTIuF9w32W8xM=\", false, function () {\n  return [useAuth];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx"],"names":["useEffect","useReducer","useState","useAuth","TeckosClientWithJWT","ServerDeviceEvents","SoundCardReducer","StageMemberReducer","CustomStageMemberReducer","email","password","Index","signInWithEmailAndPassword","token","socket","setSocket","device","setDevice","byId","byGroup","allIds","stageMembers","dispatchStageMembers","customStageMembers","dispatchCustomStageMembers","soundCards","dispatchSoundCard","presets","setPresets","initialDevice","name","canOv","canAudio","sendAudio","receiveAudio","soundCardIds","nSocket","process","env","NEXT_PUBLIC_API_URL","reconnection","timeout","on","console","log","LOCAL_DEVICE_READY","connect","JSON","stringify"],"mappings":"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","sourcesContent":["import {useEffect, useReducer, useState} from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport {ITeckosClient, TeckosClientWithJWT} from 'teckos-client';\nimport {Device} from \"../utils/types/Device\";\nimport {ServerDeviceEvents} from \"../utils/types/SocketEvents\";\nimport {TrackPreset} from \"../utils/types/TrackPreset\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport StageMemberReducer from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\n\nconst email = \"test@digital-stage.org\";\nconst password = \"testtesttest\";\n\n\nconst Index = () => {\n    const {signInWithEmailAndPassword, token} = useAuth();\n    const [socket, setSocket] = useState<ITeckosClient>();\n    const [device, setDevice] = useState<Device>();\n    const [stageMembers, dispatchStageMembers] = useReducer(StageMemberReducer, {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    });\n    const [customStageMembers, dispatchCustomStageMembers] = useReducer(CustomStageMemberReducer, {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    });\n    const [soundCards, dispatchSoundCard] = useReducer(SoundCardReducer, {\n        byId: {},\n        allIds: []\n    });\n    const [presets, setPresets] = useState<{\n        byId: {\n            [id: string]: TrackPreset\n        },\n        bySoundCard: {\n            [soundCardId: string]: string[]\n        },\n        allIds: string[]\n    }>();\n\n    useEffect(() => {\n        // Sign in\n        signInWithEmailAndPassword(email, password);\n    }, []);\n\n    useEffect(() => {\n        // Got token, register self as device\n        const initialDevice: Partial<Device> = {\n            name: 'OV Simulator',\n            canOv: true,\n            canAudio: true,\n            sendAudio: true,\n            receiveAudio: true,\n            soundCardIds: [],\n        };\n\n        const nSocket = new TeckosClientWithJWT(\n            process.env.NEXT_PUBLIC_API_URL,\n            {\n                reconnection: true,\n                timeout: 1000,\n            },\n            token,\n            {\n                device: initialDevice,\n            }\n        );\n\n        nSocket.on(\"connect\", () => {\n            console.log(\"connected!\")\n        });\n\n\n        nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, (device: Device) => {\n            console.log(\"connected!\")\n            setDevice(device);\n        })\n\n        nSocket.connect();\n\n        setSocket(nSocket);\n\n    }, [token])\n\n    return (\n        <div>\n            <ul>\n                <li>\n                    Token: {token ? \"ok\" : \"requesting\"}\n                </li>\n                <li>\n                    Device:\n                    {device ? <pre>{JSON.stringify(device, null, 2)}</pre> : \"requesting\"}\n                </li>\n            </ul>\n        </div>\n    )\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}