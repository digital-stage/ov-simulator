{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer, useState } from \"react\";\nimport StageMemberReducer, { addStageMember, changeStageMember, removeStageMember } from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer from \"../utils/reducers/RemoteTrackReducer\";\nimport { TeckosClientWithJWT } from \"teckos-client\";\nimport TrackPresetReducer from \"../utils/reducers/TrackPresetReducer\";\nimport { ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents } from \"../utils/types/SocketEvents\";\nimport * as React from \"react\";\nvar InitialState = {\n  soundCards: {\n    byId: {},\n    allIds: []\n  },\n  presets: {\n    byId: {},\n    bySoundCard: {},\n    allIds: []\n  },\n  tracks: {\n    byId: {},\n    bySoundCard: {},\n    byPreset: {},\n    allIds: []\n  },\n  stageMembers: {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  },\n  customStageMembers: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  },\n  remoteTracks: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  }\n};\nvar Context = /*#__PURE__*/createContext(InitialState);\n_c = Context;\n\nvar StageProvider = function StageProvider(props) {\n  _s();\n\n  var children = props.children,\n      token = props.token;\n\n  var _useState = useState(),\n      setSocket = _useState[1];\n\n  var _useState2 = useState(),\n      device = _useState2[0],\n      setDevice = _useState2[1]; // OV related entities\n\n\n  var _useReducer = useReducer(SoundCardReducer, InitialState.soundCards),\n      soundCards = _useReducer[0],\n      dispatchSoundCard = _useReducer[1];\n\n  var _useReducer2 = useReducer(TrackPresetReducer, InitialState.presets),\n      presets = _useReducer2[0],\n      dispatchPresets = _useReducer2[1];\n\n  var _useReducer3 = useReducer(TrackReducer, InitialState.tracks),\n      tracks = _useReducer3[0],\n      dispatchTracks = _useReducer3[1]; // Digital stage related entities\n\n\n  var _useReducer4 = useReducer(StageMemberReducer, InitialState.stageMembers),\n      stageMembers = _useReducer4[0],\n      dispatchStageMembers = _useReducer4[1];\n\n  var _useReducer5 = useReducer(CustomStageMemberReducer, InitialState.customStageMembers),\n      customStageMembers = _useReducer5[0],\n      dispatchCustomStageMembers = _useReducer5[1];\n\n  var _useReducer6 = useReducer(RemoteTrackReducer, InitialState.remoteTracks),\n      remoteTracks = _useReducer6[0],\n      dispatchRemoteTracks = _useReducer6[1];\n\n  useEffect(function () {\n    // Got token, register self as device\n    var initialDevice = {\n      name: 'OV Simulator',\n      canOv: true,\n      canAudio: true,\n      sendAudio: true,\n      receiveAudio: true,\n      soundCardIds: []\n    };\n    var nSocket = new TeckosClientWithJWT(process.env.NEXT_PUBLIC_API_URL, {\n      reconnection: true,\n      timeout: 1000\n    }, token, {\n      device: initialDevice\n    });\n    nSocket.on(\"connect\", function () {\n      console.log(\"connected!\");\n    });\n    nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, function (device) {\n      console.log(\"connected!\");\n      setDevice(device);\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, function (payload) {\n      return dispatchStageMembers(addStageMember(payload));\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, function (payload) {\n      return dispatchStageMembers(changeStageMember(payload));\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, function (payload) {\n      return dispatchStageMembers(removeStageMember(payload));\n    });\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, function (payload) {\n      return dispatchCustomStageMembers({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, function (payload) {\n      return dispatchCustomStageMembers({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, function (payload) {\n      return dispatchCustomStageMembers({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, function (payload) {\n      return dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, function (payload) {\n      return dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, function (payload) {\n      return dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, function (payload) {\n      return dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, function (payload) {\n      return dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, function (payload) {\n      return dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n        payload: payload\n      });\n    });\n    nSocket.on(ServerGlobalEvents.STAGE_JOINED, function (payload) {\n      // Handle package with many stage related entities\n      payload.stageMembers.forEach(function (stageMember) {\n        return dispatchStageMembers(addStageMember(stageMember));\n      });\n      payload.customStageMembers.forEach(function (customStageMember) {\n        return dispatchCustomStageMembers({\n          type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n          payload: customStageMember\n        });\n      });\n      payload.ovTracks.forEach(function (ovTrack) {\n        return dispatchRemoteTracks({\n          type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n          payload: ovTrack\n        });\n      });\n    });\n    nSocket.connect();\n    setSocket(nSocket);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      device: device,\n      soundCards: soundCards,\n      presets: presets,\n      tracks: tracks,\n      stageMembers: stageMembers,\n      customStageMembers: customStageMembers,\n      remoteTracks: remoteTracks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(StageProvider, \"fobG11pYyLLcNRuFvbmb4W9Kdls=\");\n\n_c2 = StageProvider;\nexport { StageProvider };\n\nvar useStage = function useStage() {\n  _s2();\n\n  return useContext(Context);\n};\n\n_s2(useStage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default useStage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Context\");\n$RefreshReg$(_c2, \"StageProvider\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx"],"names":["createContext","useContext","useEffect","useReducer","useState","StageMemberReducer","addStageMember","changeStageMember","removeStageMember","CustomStageMemberReducer","TrackReducer","SoundCardReducer","RemoteTrackReducer","TeckosClientWithJWT","TrackPresetReducer","ServerDeviceEvents","ServerGlobalEvents","ServerStageEvents","React","InitialState","soundCards","byId","allIds","presets","bySoundCard","tracks","byPreset","stageMembers","byGroup","customStageMembers","byStageMember","remoteTracks","Context","StageProvider","props","children","token","setSocket","device","setDevice","dispatchSoundCard","dispatchPresets","dispatchTracks","dispatchStageMembers","dispatchCustomStageMembers","dispatchRemoteTracks","initialDevice","name","canOv","canAudio","sendAudio","receiveAudio","soundCardIds","nSocket","process","env","NEXT_PUBLIC_API_URL","reconnection","timeout","on","console","log","LOCAL_DEVICE_READY","STAGE_MEMBER_ADDED","payload","STAGE_MEMBER_CHANGED","STAGE_MEMBER_REMOVED","CUSTOM_STAGE_MEMBER_ADDED","type","CUSTOM_STAGE_MEMBER_CHANGED","CUSTOM_STAGE_MEMBER_REMOVED","STAGE_MEMBER_OV_ADDED","STAGE_MEMBER_OV_CHANGED","STAGE_MEMBER_OV_REMOVED","CUSTOM_STAGE_MEMBER_OV_ADDED","CUSTOM_STAGE_MEMBER_OV_CHANGED","CUSTOM_STAGE_MEMBER_OV_REMOVED","STAGE_JOINED","forEach","stageMember","customStageMember","ovTracks","ovTrack","connect","useStage"],"mappings":"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","sourcesContent":["import {createContext, useContext, useEffect, useReducer, useState} from \"react\";\nimport StageMemberReducer, {\n    addStageMember,\n    changeStageMember, removeStageMember,\n    StageMembers\n} from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer, {CustomStageMembers} from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer, {Tracks} from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer, {SoundCards} from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer, {RemoteTracks} from \"../utils/reducers/RemoteTrackReducer\";\nimport {ITeckosClient, TeckosClientWithJWT} from \"teckos-client\";\nimport {Device} from \"../utils/types/Device\";\nimport TrackPresetReducer, {TrackPresets} from \"../utils/reducers/TrackPresetReducer\";\nimport {ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents} from \"../utils/types/SocketEvents\";\nimport {InitialStagePackage} from \"../utils/types/InitialStagePackage\";\nimport * as React from \"react\";\nimport {StageMemberOvTrack} from \"../utils/types/StageMemberOvTrack\";\n\ninterface StageContext {\n    device?: Device;\n    soundCards: SoundCards;\n    presets: TrackPresets;\n    tracks: Tracks;\n\n    stageMembers: StageMembers;\n    customStageMembers: CustomStageMembers;\n\n    remoteTracks: RemoteTracks;\n}\n\nconst InitialState = {\n    soundCards: {\n        byId: {},\n        allIds: []\n    },\n    presets: {\n        byId: {},\n        bySoundCard: {},\n        allIds: []\n    },\n    tracks: {\n        byId: {},\n        bySoundCard: {},\n        byPreset: {},\n        allIds: []\n    },\n    stageMembers: {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    },\n    customStageMembers: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    },\n    remoteTracks: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    }\n}\n\nconst Context = createContext<StageContext>(InitialState);\n\nconst StageProvider = (props: {\n    children: React.ReactNode,\n    token?: string\n}) => {\n    const {children, token} = props;\n    const [, setSocket] = useState<ITeckosClient>();\n    const [device, setDevice] = useState<Device>();\n\n    // OV related entities\n    const [soundCards, dispatchSoundCard] = useReducer(SoundCardReducer, InitialState.soundCards);\n    const [presets, dispatchPresets] = useReducer(TrackPresetReducer, InitialState.presets);\n    const [tracks, dispatchTracks] = useReducer(TrackReducer, InitialState.tracks);\n\n    // Digital stage related entities\n    const [stageMembers, dispatchStageMembers] = useReducer(StageMemberReducer, InitialState.stageMembers);\n    const [customStageMembers, dispatchCustomStageMembers] = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n    const [remoteTracks, dispatchRemoteTracks] = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n\n    useEffect(() => {\n        // Got token, register self as device\n        const initialDevice: Partial<Device> = {\n            name: 'OV Simulator',\n            canOv: true,\n            canAudio: true,\n            sendAudio: true,\n            receiveAudio: true,\n            soundCardIds: [],\n        };\n\n        const nSocket = new TeckosClientWithJWT(\n            process.env.NEXT_PUBLIC_API_URL,\n            {\n                reconnection: true,\n                timeout: 1000,\n            },\n            token,\n            {\n                device: initialDevice,\n            }\n        );\n\n        nSocket.on(\"connect\", () => {\n            console.log(\"connected!\")\n        });\n\n        nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, (device: Device) => {\n            console.log(\"connected!\")\n            setDevice(device);\n        })\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers(addStageMember(payload)));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers(changeStageMember(payload)));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers(removeStageMember(payload)));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerGlobalEvents.STAGE_JOINED, (payload: InitialStagePackage) => {\n            // Handle package with many stage related entities\n            payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n            payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n                type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n                payload: customStageMember\n            }));\n            payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n                type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n                payload: ovTrack\n            }));\n        });\n\n        nSocket.connect();\n\n        setSocket(nSocket);\n    }, [token])\n\n    return (\n        <Context.Provider value={{\n            device,\n            soundCards,\n            presets,\n            tracks,\n            stageMembers,\n            customStageMembers,\n            remoteTracks\n        }}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport {\n    StageProvider\n}\n\nconst useStage = (): StageContext => useContext<StageContext>(Context);\nexport default useStage;\n"]},"metadata":{},"sourceType":"module"}