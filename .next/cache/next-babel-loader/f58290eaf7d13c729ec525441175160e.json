{"ast":null,"code":"import _defineProperty from \"/Users/tobias/Developer/digitalstage/ov-simulator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ServerStageEvents } from \"../types/SocketEvents\";\nimport upsert from \"../upsert\";\nimport omit from 'lodash/omit';\n\nfunction CustomGroupReducer(state, action) {\n  switch (action.type) {\n    case ServerStageEvents.CUSTOM_GROUP_ADDED:\n      {\n        var customGroup = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, customGroup._id, customGroup)),\n          byGroup: _objectSpread(_objectSpread({}, state.byGroup), {}, _defineProperty({}, customGroup.stageId, customGroup._id)),\n          allIds: upsert(state.allIds, customGroup._id)\n        };\n      }\n\n    case ServerStageEvents.CUSTOM_GROUP_CHANGED:\n      {\n        var _customGroup = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, _customGroup._id, _objectSpread(_objectSpread({}, state.byId[_customGroup._id]), _customGroup)))\n        });\n      }\n\n    case ServerStageEvents.CUSTOM_GROUP_REMOVED:\n      {\n        var removedId = action.payload;\n        var _customGroup2 = state.byId[removedId];\n        if (!_customGroup2) return state;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          byGroup: omit(state.byGroup, _customGroup2.groupId),\n          allIds: state.allIds.filter(function (id) {\n            return id !== removedId;\n          })\n        });\n      }\n\n    default:\n      throw new Error(\"Unsupported event: \" + action);\n  }\n}\n\n_c = CustomGroupReducer;\nexport default CustomGroupReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomGroupReducer\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/CustomGroupReducer.ts"],"names":["ServerStageEvents","upsert","omit","CustomGroupReducer","state","action","type","CUSTOM_GROUP_ADDED","customGroup","payload","byId","_id","byGroup","stageId","allIds","CUSTOM_GROUP_CHANGED","CUSTOM_GROUP_REMOVED","removedId","groupId","filter","id","Error"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAkBA,SAASC,kBAAT,CAA4BC,KAA5B,EAAiDC,MAAjD,EAA0F;AACtF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAiB,CAACO,kBAAvB;AAA2C;AACvC,YAAMC,WAAwB,GAAGH,MAAM,CAACI,OAAxC;AACA,eAAO;AACHC,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECF,WAAW,CAACG,GAFb,EAEmBH,WAFnB,EADD;AAKHI,UAAAA,OAAO,kCACAR,KAAK,CAACQ,OADN,2BAEFJ,WAAW,CAACK,OAFV,EAEoBL,WAAW,CAACG,GAFhC,EALJ;AASHG,UAAAA,MAAM,EAAEb,MAAM,CAASG,KAAK,CAACU,MAAf,EAAuBN,WAAW,CAACG,GAAnC;AATX,SAAP;AAWH;;AACD,SAAKX,iBAAiB,CAACe,oBAAvB;AAA6C;AACzC,YAAMP,YAAwB,GAAGH,MAAM,CAACI,OAAxC;AACA,+CACOL,KADP;AAEIM,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECF,YAAW,CAACG,GAFb,kCAGOP,KAAK,CAACM,IAAN,CAAWF,YAAW,CAACG,GAAvB,CAHP,GAIOH,YAJP;AAFR;AAUH;;AACD,SAAKR,iBAAiB,CAACgB,oBAAvB;AAA6C;AACzC,YAAMC,SAAiB,GAAGZ,MAAM,CAACI,OAAjC;AACA,YAAMD,aAAwB,GAAGJ,KAAK,CAACM,IAAN,CAAWO,SAAX,CAAjC;AACA,YAAI,CAACT,aAAL,EACI,OAAOJ,KAAP;AACJ,+CACOA,KADP;AAEIM,UAAAA,IAAI,EAAER,IAAI,CAACE,KAAK,CAACM,IAAP,EAAaO,SAAb,CAFd;AAGIL,UAAAA,OAAO,EAAEV,IAAI,CAACE,KAAK,CAACQ,OAAP,EAAgBJ,aAAW,CAACU,OAA5B,CAHjB;AAIIJ,UAAAA,MAAM,EAAEV,KAAK,CAACU,MAAN,CAAaK,MAAb,CAAoB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,KAAKH,SAAX;AAAA,WAAtB;AAJZ;AAMH;;AACD;AACI,YAAM,IAAII,KAAJ,CAAU,wBAAwBhB,MAAlC,CAAN;AAzCR;AA2CH;;KA5CQF,kB;AA8CT,eAAeA,kBAAf","sourcesContent":["import {ServerStageEvents} from \"../types/SocketEvents\";\nimport upsert from \"../upsert\";\nimport omit from 'lodash/omit';\nimport {CustomGroup} from \"../types/CustomGroup\";\n\nexport type CustomGroupAction =\n    { type: ServerStageEvents.CUSTOM_GROUP_ADDED, payload: CustomGroup }\n    | { type: ServerStageEvents.CUSTOM_GROUP_CHANGED, payload: CustomGroup }\n    | { type: ServerStageEvents.CUSTOM_GROUP_REMOVED, payload: string };\n\nexport interface CustomGroups {\n    byId: {\n        [id: string]: CustomGroup\n    },\n    byGroup: {\n        [groupId: string]: string\n    },\n    allIds: string[]\n}\n\nfunction CustomGroupReducer(state: CustomGroups, action: CustomGroupAction): CustomGroups {\n    switch (action.type) {\n        case ServerStageEvents.CUSTOM_GROUP_ADDED: {\n            const customGroup: CustomGroup = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [customGroup._id]: customGroup\n                },\n                byGroup: {\n                    ...state.byGroup,\n                    [customGroup.stageId]: customGroup._id\n                },\n                allIds: upsert<string>(state.allIds, customGroup._id)\n            }\n        }\n        case ServerStageEvents.CUSTOM_GROUP_CHANGED: {\n            const customGroup: CustomGroup = action.payload;\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [customGroup._id]: {\n                        ...state.byId[customGroup._id],\n                        ...customGroup\n                    }\n                }\n            }\n        }\n        case ServerStageEvents.CUSTOM_GROUP_REMOVED: {\n            const removedId: string = action.payload;\n            const customGroup: CustomGroup = state.byId[removedId];\n            if (!customGroup)\n                return state;\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                byGroup: omit(state.byGroup, customGroup.groupId),\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n        default:\n            throw new Error(\"Unsupported event: \" + action);\n    }\n}\n\nexport default CustomGroupReducer;\n"]},"metadata":{},"sourceType":"module"}