{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport useStage, { MAC } from \"../libs/useStage\";\nimport SoundCardSimulator from \"../components/SoundCardSimulator\";\nvar email = \"test@digital-stage.org\";\nvar password = \"testtesttest\";\n\nvar Index = function Index() {\n  _s();\n\n  var _useAuth = useAuth(),\n      signInWithEmailAndPassword = _useAuth.signInWithEmailAndPassword,\n      token = _useAuth.token;\n\n  var _useStage = useStage(),\n      device = _useStage.device,\n      soundCards = _useStage.soundCards,\n      presets = _useStage.presets;\n\n  useEffect(function () {\n    // Sign in\n    signInWithEmailAndPassword(email, password);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Usually any ov-client will do the following steps when connecting:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"1.) Get token: \", token ? \"ok\" : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"2.) Identify this Device by it's mac address '\", MAC, \"':\", device ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(device, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 31\n        }, _this) : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"The ov-client now can update the server about the connected sound cards.\", /*#__PURE__*/_jsxDEV(SoundCardSimulator, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Inside the webclient we now have the following entities:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Available sound cards (even if not used by any ov-client):\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: soundCards.allIds.map(function (id) {\n            return soundCards.byId[id];\n          }).map(function (soundCard) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [soundCard.name, /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"PRESETS:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: presets.bySoundCard[soundCard._id] && presets.bySoundCard[soundCard._id].map(function (id) {\n                      return presets.byId[id];\n                    }).map(function (preset) {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: [preset.name, /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Input:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                            children: /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: Array(soundCard.numInputChannels).map(function () {\n                                return /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"checkbox\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 59,\n                                  columnNumber: 69\n                                }, _this);\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 57,\n                              columnNumber: 61\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 56,\n                            columnNumber: 57\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 54,\n                          columnNumber: 53\n                        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: [\"Output:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n                            children: /*#__PURE__*/_jsxDEV(\"li\", {\n                              children: Array(soundCard.numOutputChannels).map(function () {\n                                return /*#__PURE__*/_jsxDEV(\"input\", {\n                                  type: \"checkbox\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 69,\n                                  columnNumber: 69\n                                }, _this);\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 67,\n                              columnNumber: 61\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 66,\n                            columnNumber: 57\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 64,\n                          columnNumber: 53\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 52,\n                        columnNumber: 49\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 50,\n                    columnNumber: 41\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 37\n                }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  children: \"ADD PRESETS\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 37\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Index, \"+8p3ukl4fZrMS/z0go+UlXSQQWk=\", false, function () {\n  return [useAuth, useStage];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx"],"names":["useEffect","useAuth","useStage","MAC","SoundCardSimulator","email","password","Index","signInWithEmailAndPassword","token","device","soundCards","presets","JSON","stringify","allIds","map","id","byId","soundCard","name","bySoundCard","_id","preset","Array","numInputChannels","numOutputChannels"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,QAAP,IAAkBC,GAAlB,QAA4B,kBAA5B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AAEA,IAAMC,KAAK,GAAG,wBAAd;AACA,IAAMC,QAAQ,GAAG,cAAjB;;AAGA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,iBAC4BN,OAAO,EADnC;AAAA,MACTO,0BADS,YACTA,0BADS;AAAA,MACmBC,KADnB,YACmBA,KADnB;;AAAA,kBAEsBP,QAAQ,EAF9B;AAAA,MAETQ,MAFS,aAETA,MAFS;AAAA,MAEDC,UAFC,aAEDA,UAFC;AAAA,MAEWC,OAFX,aAEWA,OAFX;;AAIhBZ,EAAAA,SAAS,CAAC,YAAM;AACZ;AACAQ,IAAAA,0BAA0B,CAACH,KAAD,EAAQC,QAAR,CAA1B;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,eAII;AAAA,8BACI;AAAA,sCACoBG,KAAK,GAAG,IAAH,GAAU,YADnC;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAII;AAAA,qEACmDN,GADnD,QAEKO,MAAM,gBAAG;AAAA,oBAAMG,IAAI,CAACC,SAAL,CAAeJ,MAAf,EAAuB,IAAvB,EAA6B,CAA7B;AAAN;AAAA;AAAA;AAAA;AAAA,iBAAH,GAAkD,YAF7D;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,eAQI;AAAA,4GAEI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eARJ;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,eAiBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBJ,eAoBI;AAAA,6BACI;AAAA,8FAEI;AAAA,oBACKC,UAAU,CAACI,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,EAAE;AAAA,mBAAIN,UAAU,CAACO,IAAX,CAAgBD,EAAhB,CAAJ;AAAA,WAAxB,EAAiDD,GAAjD,CAAqD,UAAAG,SAAS;AAAA,gCAC3D;AAAA,yBACKA,SAAS,CAACC,IADf,eAEI;AAAA,oDAEI;AAAA,yCACI;AAAA,8BACKR,OAAO,CAACS,WAAR,CAAoBF,SAAS,CAACG,GAA9B,KAAsCV,OAAO,CAACS,WAAR,CAAoBF,SAAS,CAACG,GAA9B,EAAmCN,GAAnC,CAAuC,UAAAC,EAAE;AAAA,6BAAIL,OAAO,CAACM,IAAR,CAAaD,EAAb,CAAJ;AAAA,qBAAzC,EAA+DD,GAA/D,CAAmE,UAAAO,MAAM;AAAA,0CAC5G;AAAA,mCACKA,MAAM,CAACH,IADZ,eAEI;AAAA,4DAEI;AAAA,mDACI;AAAA,wCACKI,KAAK,CAACL,SAAS,CAACM,gBAAX,CAAL,CAAkCT,GAAlC,CAAsC;AAAA,oDACnC;AAAO,kCAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,yCADmC;AAAA,+BAAtC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFJ,eAYI;AAAA,6DAEI;AAAA,mDACI;AAAA,wCACKQ,KAAK,CAACL,SAAS,CAACO,iBAAX,CAAL,CAAmCV,GAAnC,CAAuC;AAAA,oDACpC;AAAO,kCAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,yCADoC;AAAA,+BAAvC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,mCAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,iCAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAD4G;AAAA,qBAAzE;AAD3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,yBAFJ,eA+BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,qBAD2D;AAAA,WAA9D;AADL;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAsEH,CA/ED;;GAAMT,K;UAC0CN,O,EACNC,Q;;;KAFpCK,K;AAgFN,eAAeA,KAAf","sourcesContent":["import {useEffect} from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport useStage, {MAC} from \"../libs/useStage\";\nimport SoundCardSimulator from \"../components/SoundCardSimulator\";\n\nconst email = \"test@digital-stage.org\";\nconst password = \"testtesttest\";\n\n\nconst Index = () => {\n    const {signInWithEmailAndPassword, token} = useAuth();\n    const {device, soundCards, presets} = useStage();\n\n    useEffect(() => {\n        // Sign in\n        signInWithEmailAndPassword(email, password);\n    }, []);\n\n    return (\n        <div>\n            <p>\n                Usually any ov-client will do the following steps when connecting:\n            </p>\n            <ul>\n                <li>\n                    1.) Get token: {token ? \"ok\" : \"requesting\"}\n                </li>\n                <li>\n                    2.) Identify this Device by it's mac address '{MAC}':\n                    {device ? <pre>{JSON.stringify(device, null, 2)}</pre> : \"requesting\"}\n                </li>\n                <li>\n                    The ov-client now can update the server about the connected sound cards.\n                    <SoundCardSimulator/>\n                </li>\n            </ul>\n            <p>\n                Inside the webclient we now have the following entities:\n            </p>\n            <ul>\n                <li>\n                    Available sound cards (even if not used by any ov-client):\n                    <ul>\n                        {soundCards.allIds.map(id => soundCards.byId[id]).map(soundCard => (\n                            <li>\n                                {soundCard.name}\n                                <p>\n                                    PRESETS:\n                                    <ul>\n                                        <li>\n                                            {presets.bySoundCard[soundCard._id] && presets.bySoundCard[soundCard._id].map(id => presets.byId[id]).map(preset => (\n                                                <div>\n                                                    {preset.name}\n                                                    <p>\n                                                        Input:\n                                                        <ul>\n                                                            <li>\n                                                                {Array(soundCard.numInputChannels).map(() => (\n                                                                    <input type=\"checkbox\"/>\n                                                                ))}\n                                                            </li>\n                                                        </ul>\n                                                    </p>\n                                                    <p>\n                                                        Output:\n                                                        <ul>\n                                                            <li>\n                                                                {Array(soundCard.numOutputChannels).map(() => (\n                                                                    <input type=\"checkbox\"/>\n                                                                ))}\n                                                            </li>\n                                                        </ul>\n                                                    </p>\n                                                </div>\n                                            ))}\n                                        </li>\n                                    </ul>\n                                    <button>\n                                        ADD PRESETS\n                                    </button>\n                                </p>\n                            </li>\n                        ))}\n                    </ul>\n                </li>\n            </ul>\n        </div>\n    )\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}