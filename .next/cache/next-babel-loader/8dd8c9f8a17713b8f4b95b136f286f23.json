{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx\";\nimport { useEffect, useReducer, useState } from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport { TeckosClientWithJWT } from 'teckos-client';\nimport { ServerDeviceEvents } from \"../utils/types/SocketEvents\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport StageMemberReducer from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackPresetReducer from \"../utils/reducers/TrackPresetReducer\";\nimport RemoteTrackReducer from \"../utils/reducers/RemoteTrackReducer\";\nconst email = \"test@digital-stage.org\";\nconst password = \"testtesttest\";\n\nconst Index = () => {\n  const {\n    signInWithEmailAndPassword,\n    token\n  } = useAuth();\n  const {\n    0: socket,\n    1: setSocket\n  } = useState();\n  const {\n    0: device,\n    1: setDevice\n  } = useState();\n  const {\n    0: soundCards,\n    1: dispatchSoundCard\n  } = useReducer(SoundCardReducer, {\n    byId: {},\n    allIds: []\n  });\n  const {\n    0: presets,\n    1: dispatchPresets\n  } = useReducer(TrackPresetReducer, {\n    byId: {},\n    bySoundCard: {},\n    allIds: []\n  });\n  const {\n    0: tracks,\n    1: dispatchTracks\n  } = useReducer(RemoteTrackReducer, {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  });\n  const {\n    0: remoteTracks,\n    1: dispatchRemoteTracks\n  } = useReducer(RemoteTrackReducer, {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  });\n  const {\n    0: stageMembers,\n    1: dispatchStageMembers\n  } = useReducer(StageMemberReducer, {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  });\n  const {\n    0: customStageMembers,\n    1: dispatchCustomStageMembers\n  } = useReducer(CustomStageMemberReducer, {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  });\n  useEffect(() => {\n    // Sign in\n    signInWithEmailAndPassword(email, password);\n  }, []);\n  useEffect(() => {\n    // Got token, register self as device\n    const initialDevice = {\n      name: 'OV Simulator',\n      canOv: true,\n      canAudio: true,\n      sendAudio: true,\n      receiveAudio: true,\n      soundCardIds: []\n    };\n    const nSocket = new TeckosClientWithJWT(process.env.NEXT_PUBLIC_API_URL, {\n      reconnection: true,\n      timeout: 1000\n    }, token, {\n      device: initialDevice\n    });\n    nSocket.on(\"connect\", () => {\n      console.log(\"connected!\");\n    });\n    nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, device => {\n      console.log(\"connected!\");\n      setDevice(device);\n    });\n    nSocket.connect();\n    setSocket(nSocket);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Token: \", token ? \"ok\" : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Device:\", device ? /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(device, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this) : \"requesting\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/pages/index.tsx"],"names":["useEffect","useReducer","useState","useAuth","TeckosClientWithJWT","ServerDeviceEvents","SoundCardReducer","StageMemberReducer","CustomStageMemberReducer","TrackPresetReducer","RemoteTrackReducer","email","password","Index","signInWithEmailAndPassword","token","socket","setSocket","device","setDevice","soundCards","dispatchSoundCard","byId","allIds","presets","dispatchPresets","bySoundCard","tracks","dispatchTracks","byStageMember","remoteTracks","dispatchRemoteTracks","stageMembers","dispatchStageMembers","byGroup","customStageMembers","dispatchCustomStageMembers","initialDevice","name","canOv","canAudio","sendAudio","receiveAudio","soundCardIds","nSocket","process","env","NEXT_PUBLIC_API_URL","reconnection","timeout","on","console","log","LOCAL_DEVICE_READY","connect","JSON","stringify"],"mappings":"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","sourcesContent":["import {useEffect, useReducer, useState} from \"react\";\nimport useAuth from \"../libs/useAuth\";\nimport {ITeckosClient, TeckosClientWithJWT} from 'teckos-client';\nimport {Device} from \"../utils/types/Device\";\nimport {ServerDeviceEvents} from \"../utils/types/SocketEvents\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport StageMemberReducer from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackPresetReducer from \"../utils/reducers/TrackPresetReducer\";\nimport RemoteTrackReducer from \"../utils/reducers/RemoteTrackReducer\";\n\nconst email = \"test@digital-stage.org\";\nconst password = \"testtesttest\";\n\n\nconst Index = () => {\n    const {signInWithEmailAndPassword, token} = useAuth();\n    const [socket, setSocket] = useState<ITeckosClient>();\n    const [device, setDevice] = useState<Device>();\n    const [soundCards, dispatchSoundCard] = useReducer(SoundCardReducer, {\n        byId: {},\n        allIds: []\n    });\n    const [presets, dispatchPresets] = useReducer(TrackPresetReducer, {\n        byId: {},\n        bySoundCard: {},\n        allIds: []\n    });\n    const [tracks, dispatchTracks] = useReducer(RemoteTrackReducer, {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    });\n    const [remoteTracks, dispatchRemoteTracks] = useReducer(RemoteTrackReducer, {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    });\n    const [stageMembers, dispatchStageMembers] = useReducer(StageMemberReducer, {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    });\n    const [customStageMembers, dispatchCustomStageMembers] = useReducer(CustomStageMemberReducer, {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    });\n\n    useEffect(() => {\n        // Sign in\n        signInWithEmailAndPassword(email, password);\n    }, []);\n\n    useEffect(() => {\n        // Got token, register self as device\n        const initialDevice: Partial<Device> = {\n            name: 'OV Simulator',\n            canOv: true,\n            canAudio: true,\n            sendAudio: true,\n            receiveAudio: true,\n            soundCardIds: [],\n        };\n\n        const nSocket = new TeckosClientWithJWT(\n            process.env.NEXT_PUBLIC_API_URL,\n            {\n                reconnection: true,\n                timeout: 1000,\n            },\n            token,\n            {\n                device: initialDevice,\n            }\n        );\n\n        nSocket.on(\"connect\", () => {\n            console.log(\"connected!\")\n        });\n\n\n        nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, (device: Device) => {\n            console.log(\"connected!\")\n            setDevice(device);\n        })\n\n        nSocket.connect();\n\n        setSocket(nSocket);\n\n    }, [token])\n\n    return (\n        <div>\n            <ul>\n                <li>\n                    Token: {token ? \"ok\" : \"requesting\"}\n                </li>\n                <li>\n                    Device:\n                    {device ? <pre>{JSON.stringify(device, null, 2)}</pre> : \"requesting\"}\n                </li>\n            </ul>\n        </div>\n    )\n};\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}