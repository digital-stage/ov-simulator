{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ServerStageEvents } from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\n\nfunction StageMemberReducer(state, action) {\n  switch (action.type) {\n    case ServerStageEvents.STAGE_MEMBER_ADDED:\n      {\n        const stageMember = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, {\n            [stageMember._id]: stageMember\n          }),\n          byGroup: _objectSpread(_objectSpread({}, state.byGroup), {}, {\n            [stageMember.groupId]: upsert([...state.byGroup[stageMember.groupId]], stageMember._id)\n          }),\n          allIds: upsert(state.allIds, stageMember._id)\n        };\n      }\n\n    case ServerStageEvents.STAGE_MEMBER_CHANGED:\n      {\n        const stageMember = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, {\n            [stageMember._id]: _objectSpread(_objectSpread({}, state.byId[stageMember._id]), stageMember)\n          })\n        });\n      }\n\n    case ServerStageEvents.STAGE_MEMBER_REMOVED:\n      {\n        const removedId = action.payload;\n        const stageMember = state.byId[removedId];\n        if (!stageMember) return state;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          byGroup: _objectSpread(_objectSpread({}, state.byGroup), {}, {\n            [stageMember.groupId]: state.byGroup[stageMember.groupId].filter(id => id !== removedId)\n          }),\n          allIds: state.allIds.filter(id => id !== removedId)\n        });\n      }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport default StageMemberReducer;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/StageMemberReducer.ts"],"names":["ServerStageEvents","upsert","omit","StageMemberReducer","state","action","type","STAGE_MEMBER_ADDED","stageMember","payload","byId","_id","byGroup","groupId","allIds","STAGE_MEMBER_CHANGED","STAGE_MEMBER_REMOVED","removedId","filter","id","Error"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAkBA,SAASC,kBAAT,CAA4BC,KAA5B,EAAiDC,MAAjD,EAA0F;AACtF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAiB,CAACO,kBAAvB;AAA2C;AACvC,cAAMC,WAAwB,GAAGH,MAAM,CAACI,OAAxC;AACA,eAAO;AACHC,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT;AAEA,aAACF,WAAW,CAACG,GAAb,GAAmBH;AAFnB,YADD;AAKHI,UAAAA,OAAO,kCACAR,KAAK,CAACQ,OADN;AAEH,aAACJ,WAAW,CAACK,OAAb,GAAuBZ,MAAM,CAAS,CAAC,GAAGG,KAAK,CAACQ,OAAN,CAAcJ,WAAW,CAACK,OAA1B,CAAJ,CAAT,EAAkDL,WAAW,CAACG,GAA9D;AAF1B,YALJ;AASHG,UAAAA,MAAM,EAAEb,MAAM,CAASG,KAAK,CAACU,MAAf,EAAuBN,WAAW,CAACG,GAAnC;AATX,SAAP;AAWH;;AACD,SAAKX,iBAAiB,CAACe,oBAAvB;AAA6C;AACzC,cAAMP,WAAwB,GAAGH,MAAM,CAACI,OAAxC;AACA,+CACOL,KADP;AAEIM,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT;AAEA,aAACF,WAAW,CAACG,GAAb,mCACOP,KAAK,CAACM,IAAN,CAAWF,WAAW,CAACG,GAAvB,CADP,GAEOH,WAFP;AAFA;AAFR;AAUH;;AACD,SAAKR,iBAAiB,CAACgB,oBAAvB;AAA6C;AACzC,cAAMC,SAAiB,GAAGZ,MAAM,CAACI,OAAjC;AACA,cAAMD,WAAwB,GAAGJ,KAAK,CAACM,IAAN,CAAWO,SAAX,CAAjC;AACA,YAAI,CAACT,WAAL,EACI,OAAOJ,KAAP;AACJ,+CACOA,KADP;AAEIM,UAAAA,IAAI,EAAER,IAAI,CAACE,KAAK,CAACM,IAAP,EAAaO,SAAb,CAFd;AAGIL,UAAAA,OAAO,kCACAR,KAAK,CAACQ,OADN;AAEH,aAACJ,WAAW,CAACK,OAAb,GAAuBT,KAAK,CAACQ,OAAN,CAAcJ,WAAW,CAACK,OAA1B,EAAmCK,MAAnC,CAA0CC,EAAE,IAAIA,EAAE,KAAKF,SAAvD;AAFpB,YAHX;AAOIH,UAAAA,MAAM,EAAEV,KAAK,CAACU,MAAN,CAAaI,MAAb,CAAoBC,EAAE,IAAIA,EAAE,KAAKF,SAAjC;AAPZ;AASH;;AAED;AACI,YAAM,IAAIG,KAAJ,EAAN;AA7CR;AA+CH;;AAED,eAAejB,kBAAf","sourcesContent":["import {ServerStageEvents} from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\nimport {StageMember} from \"../types/StageMember\";\n\nexport type StageMemberAction =\n    { type: ServerStageEvents.STAGE_MEMBER_ADDED, payload: StageMember }\n    | { type: ServerStageEvents.STAGE_MEMBER_CHANGED, payload: StageMember }\n    | { type: ServerStageEvents.STAGE_MEMBER_REMOVED, payload: string };\n\nexport interface StageMembers {\n    byId: {\n        [id: string]: StageMember\n    },\n    byGroup: {\n        [groupId: string]: string[]\n    },\n    allIds: string[]\n}\n\nfunction StageMemberReducer(state: StageMembers, action: StageMemberAction): StageMembers {\n    switch (action.type) {\n        case ServerStageEvents.STAGE_MEMBER_ADDED: {\n            const stageMember: StageMember = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [stageMember._id]: stageMember\n                },\n                byGroup: {\n                    ...state.byGroup,\n                    [stageMember.groupId]: upsert<string>([...state.byGroup[stageMember.groupId]], stageMember._id),\n                },\n                allIds: upsert<string>(state.allIds, stageMember._id)\n            }\n        }\n        case ServerStageEvents.STAGE_MEMBER_CHANGED: {\n            const stageMember: StageMember = action.payload;\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [stageMember._id]: {\n                        ...state.byId[stageMember._id],\n                        ...stageMember\n                    }\n                }\n            }\n        }\n        case ServerStageEvents.STAGE_MEMBER_REMOVED: {\n            const removedId: string = action.payload;\n            const stageMember: StageMember = state.byId[removedId];\n            if (!stageMember)\n                return state;\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                byGroup: {\n                    ...state.byGroup,\n                    [stageMember.groupId]: state.byGroup[stageMember.groupId].filter(id => id !== removedId)\n                },\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n\n        default:\n            throw new Error();\n    }\n}\n\nexport default StageMemberReducer;\n"]},"metadata":{},"sourceType":"module"}