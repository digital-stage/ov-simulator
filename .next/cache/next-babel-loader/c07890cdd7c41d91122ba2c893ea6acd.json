{"ast":null,"code":"import _slicedToArray from \"/Users/tobias/Developer/digitalstage/ov-simulator/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/libs/useAuth/index.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport * as cookie from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nimport debug from 'debug';\nimport AuthError from \"./AuthError\";\nexport var ErrorCodes = {\n  Unauthorized: 401,\n  NotActivated: 424,\n  NotFound: 404,\n  BadRequest: 400,\n  EmailAlreadyInUse: 409,\n  AlreadyActivated: 416,\n  InternalError: 500,\n  InvalidToken: 403\n};\nvar report = debug('digitalstage:auth');\n\nvar throwAddProviderError = function throwAddProviderError() {\n  throw new Error('Please wrap the DOM tree with the AuthProvider');\n};\n\nvar AuthContext = /*#__PURE__*/React.createContext({\n  loading: true,\n  createUserWithEmailAndPassword: throwAddProviderError,\n  signInWithEmailAndPassword: throwAddProviderError,\n  requestPasswordReset: throwAddProviderError,\n  resetPassword: throwAddProviderError,\n  logout: throwAddProviderError,\n  activate: throwAddProviderError,\n  resendActivationLink: throwAddProviderError\n});\n\nvar getUserByToken = function getUserByToken(authUrl, token) {\n  return fetch(\"\".concat(authUrl, \"/profile\"), {\n    headers: {\n      'Content-Type': 'application/json',\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(function (result) {\n    if (result.ok) {\n      return result.json();\n    } else {\n      throw new AuthError(result.status, result.statusText);\n    }\n  }).then(function (json) {\n    return json;\n  });\n};\n\nvar AuthConsumer = AuthContext.Consumer;\n\nvar AuthProvider = function AuthProvider(props) {\n  _s();\n\n  var children = props.children,\n      authUrl = props.authUrl;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      token = _React$useState2[0],\n      setToken = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      user = _React$useState4[0],\n      setUser = _React$useState4[1];\n\n  var _React$useState5 = React.useState(true),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      loading = _React$useState6[0],\n      setLoading = _React$useState6[1];\n\n  var createUserWithEmailAndPassword = React.useCallback(function (email, password, name, avatarUrl) {\n    setLoading(true);\n    return fetch(\"\".concat(authUrl, \"/signup\"), {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        name: name,\n        avatarUrl: avatarUrl || ''\n      })\n    }).then(function (res) {\n      if (!res.ok) {\n        throw new AuthError(res.status, res.statusText);\n      }\n    });\n  }, [authUrl]);\n  var signInWithEmailAndPassword = React.useCallback(function (email, password, staySignedIn) {\n    setLoading(true);\n    return fetch(\"\".concat(authUrl, \"/login\"), {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(function (res) {\n      if (res.ok) return res.json();\n      throw new AuthError(res.status, res.statusText);\n    }).then(function (resToken) {\n      return getUserByToken(authUrl, resToken).then(function (resUser) {\n        setUser(resUser);\n        setToken(resToken);\n        cookie.set('token', resToken, {\n          expires: staySignedIn ? 7 : 1\n        });\n      });\n    })[\"finally\"](function () {\n      setLoading(false);\n    });\n  }, [authUrl]);\n  var requestPasswordReset = React.useCallback(function (email) {\n    return fetch(\"\".concat(authUrl, \"/forgot\"), {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        email: email\n      })\n    }).then(function (res) {\n      if (!res.ok) throw new AuthError(res.status, res.statusText);\n    })[\"catch\"](function (err) {\n      throw err;\n    });\n  }, [authUrl]);\n  var resetPassword = React.useCallback(function (resetToken, password) {\n    return fetch(\"\".concat(authUrl, \"/reset\"), {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        token: resetToken,\n        password: password\n      })\n    }).then(function (res) {\n      if (!res.ok) {\n        throw new AuthError(res.status, res.statusText);\n      }\n    });\n  }, [authUrl]);\n  var activate = React.useCallback(function (code) {\n    return fetch(\"\".concat(authUrl, \"/activate\"), {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        code: code\n      })\n    }).then(function (res) {\n      if (!res.ok) throw new AuthError(res.status, res.statusText);\n    });\n  }, []);\n  var resendActivationLink = React.useCallback(function (email) {\n    return fetch(\"\".concat(authUrl, \"/reactivate\"), {\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        email: email\n      })\n    }).then(function (res) {\n      if (!res.ok) throw new AuthError(res.status, res.statusText);\n    });\n  }, []);\n  var logout = React.useCallback(function () {\n    setLoading(true);\n    return fetch(\"\".concat(authUrl, \"/logout\"), {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: \"Bearer \".concat(token)\n      },\n      method: 'POST'\n    }).then(function (res) {\n      if (res.ok) {\n        cookie.remove('token');\n        setToken(undefined);\n        setUser(undefined);\n      } else {\n        throw new AuthError(res.status, res.statusText);\n      }\n    })[\"finally\"](function () {\n      setLoading(false);\n    });\n  }, [token, authUrl]);\n  React.useEffect(function () {\n    // First get cookie\n    var resToken = cookie.get('token');\n\n    if (resToken) {\n      // Try to use the token to login\n      getUserByToken(authUrl, resToken).then(function (resUser) {\n        setUser(resUser);\n        setToken(resToken);\n      })[\"catch\"](function (resError) {\n        report(resError);\n        setUser(undefined);\n        setToken(undefined);\n        cookie.remove('token');\n      })[\"finally\"](function () {\n        setLoading(false);\n      });\n    } else {\n      setUser(undefined);\n      setLoading(false);\n    }\n\n    return function () {\n      setToken(undefined);\n      setUser(undefined);\n    };\n  }, [authUrl]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      createUserWithEmailAndPassword: createUserWithEmailAndPassword,\n      signInWithEmailAndPassword: signInWithEmailAndPassword,\n      requestPasswordReset: requestPasswordReset,\n      resetPassword: resetPassword,\n      logout: logout,\n      user: user,\n      loading: loading,\n      activate: activate,\n      resendActivationLink: resendActivationLink,\n      token: token\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 267,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AuthProvider, \"sZwJPWYD4XtkM224hhhlN1cNTfI=\");\n\n_c = AuthProvider;\n\nvar useAuth = function useAuth() {\n  _s2();\n\n  return React.useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider, AuthConsumer };\nexport default useAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/libs/useAuth/index.tsx"],"names":["React","cookie","fetch","debug","AuthError","ErrorCodes","Unauthorized","NotActivated","NotFound","BadRequest","EmailAlreadyInUse","AlreadyActivated","InternalError","InvalidToken","report","throwAddProviderError","Error","AuthContext","createContext","loading","createUserWithEmailAndPassword","signInWithEmailAndPassword","requestPasswordReset","resetPassword","logout","activate","resendActivationLink","getUserByToken","authUrl","token","headers","Authorization","then","result","ok","json","status","statusText","AuthConsumer","Consumer","AuthProvider","props","children","useState","setToken","user","setUser","setLoading","useCallback","email","password","name","avatarUrl","method","body","JSON","stringify","res","staySignedIn","resToken","resUser","set","expires","err","resetToken","code","remove","undefined","useEffect","get","resError","useAuth","useContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as cookie from 'js-cookie';\nimport fetch from 'isomorphic-unfetch';\nimport debug from 'debug';\nimport {AuthUser} from \"./AuthUser\";\nimport AuthError from \"./AuthError\";\n\nexport const ErrorCodes = {\n    Unauthorized: 401,\n    NotActivated: 424,\n    NotFound: 404,\n    BadRequest: 400,\n    EmailAlreadyInUse: 409,\n    AlreadyActivated: 416,\n    InternalError: 500,\n    InvalidToken: 403,\n};\n\nconst report = debug('digitalstage:auth');\n\nexport interface TAuthContext {\n    user?: AuthUser;\n    loading: boolean;\n    token?: string;\n\n    createUserWithEmailAndPassword(\n        email: string,\n        password: string,\n        name: string,\n        avatarUrl?: string\n    ): Promise<any>;\n\n    signInWithEmailAndPassword(\n        email: string,\n        password: string,\n        staySignedIn?: boolean\n    ): Promise<any>;\n\n    requestPasswordReset(email: string): Promise<any>;\n\n    resetPassword(resetToken: string, password: string): Promise<any>;\n\n    activate(code: string): Promise<any>;\n\n    resendActivationLink(email: string): Promise<any>;\n\n    logout(): Promise<any>;\n}\n\nconst throwAddProviderError = () => {\n    throw new Error('Please wrap the DOM tree with the AuthProvider');\n};\n\nconst AuthContext = React.createContext<TAuthContext>({\n    loading: true,\n    createUserWithEmailAndPassword: throwAddProviderError,\n    signInWithEmailAndPassword: throwAddProviderError,\n    requestPasswordReset: throwAddProviderError,\n    resetPassword: throwAddProviderError,\n    logout: throwAddProviderError,\n    activate: throwAddProviderError,\n    resendActivationLink: throwAddProviderError,\n});\n\nconst getUserByToken = (authUrl: string, token: string): Promise<AuthUser> =>\n    fetch(`${authUrl}/profile`, {\n        headers: {\n            'Content-Type': 'application/json',\n            Authorization: `Bearer ${token}`,\n        },\n    })\n        .then((result) => {\n            if (result.ok) {\n                return result.json();\n            } else {\n                throw new AuthError(result.status, result.statusText);\n            }\n        })\n        .then((json) => json as AuthUser);\n\nconst AuthConsumer = AuthContext.Consumer;\n\nconst AuthProvider = (props: {\n    children: React.ReactNode;\n    authUrl: string;\n}) => {\n    const {children, authUrl} = props;\n\n    const [token, setToken] = React.useState<string>();\n    const [user, setUser] = React.useState<AuthUser>();\n    const [loading, setLoading] = React.useState<boolean>(true);\n\n    const createUserWithEmailAndPassword = React.useCallback(\n        (email: string, password: string, name: string, avatarUrl?: string) => {\n            setLoading(true);\n            return fetch(`${authUrl}/signup`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email,\n                    password,\n                    name,\n                    avatarUrl: avatarUrl || '',\n                }),\n            }).then((res) => {\n                if (!res.ok) {\n                    throw new AuthError(res.status, res.statusText);\n                }\n            });\n        },\n        [authUrl]\n    );\n\n    const signInWithEmailAndPassword = React.useCallback(\n        (email: string, password: string, staySignedIn?: boolean) => {\n            setLoading(true);\n            return fetch(`${authUrl}/login`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email,\n                    password,\n                }),\n            })\n                .then((res) => {\n                    if (res.ok) return res.json();\n                    throw new AuthError(res.status, res.statusText);\n                })\n                .then((resToken) =>\n                    getUserByToken(authUrl, resToken).then((resUser) => {\n                        setUser(resUser);\n                        setToken(resToken);\n                        cookie.set('token', resToken, { expires: staySignedIn ? 7 : 1 });\n                    })\n                )\n                .finally(() => {\n                    setLoading(false);\n                });\n        },\n        [authUrl]\n    );\n\n    const requestPasswordReset = React.useCallback(\n        (email: string) =>\n            fetch(`${authUrl}/forgot`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    email,\n                }),\n            })\n                .then((res) => {\n                    if (!res.ok) throw new AuthError(res.status, res.statusText);\n                })\n                .catch((err) => {\n                    throw err;\n                }),\n        [authUrl]\n    );\n\n    const resetPassword = React.useCallback(\n        (resetToken: string, password: string) =>\n            fetch(`${authUrl}/reset`, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                method: 'POST',\n                body: JSON.stringify({\n                    token: resetToken,\n                    password,\n                }),\n            }).then((res) => {\n                if (!res.ok) {\n                    throw new AuthError(res.status, res.statusText);\n                }\n            }),\n        [authUrl]\n    );\n\n    const activate = React.useCallback((code: string): Promise<void> => {\n        return fetch(`${authUrl}/activate`, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                code: code,\n            }),\n        }).then((res) => {\n            if (!res.ok) throw new AuthError(res.status, res.statusText);\n        });\n    }, []);\n\n    const resendActivationLink = React.useCallback((email: string): Promise<void> => {\n        return fetch(`${authUrl}/reactivate`, {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            method: 'POST',\n            body: JSON.stringify({\n                email: email,\n            }),\n        }).then((res) => {\n            if (!res.ok) throw new AuthError(res.status, res.statusText);\n        });\n    }, []);\n\n    const logout = React.useCallback(() => {\n        setLoading(true);\n        return fetch(`${authUrl}/logout`, {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n            method: 'POST',\n        })\n            .then((res) => {\n                if (res.ok) {\n                    cookie.remove('token');\n                    setToken(undefined);\n                    setUser(undefined);\n                } else {\n                    throw new AuthError(res.status, res.statusText);\n                }\n            })\n            .finally(() => {\n                setLoading(false);\n            });\n    }, [token, authUrl]);\n\n    React.useEffect(() => {\n        // First get cookie\n        const resToken = cookie.get('token');\n        if (resToken) {\n            // Try to use the token to login\n            getUserByToken(authUrl, resToken)\n                .then((resUser) => {\n                    setUser(resUser);\n                    setToken(resToken);\n                })\n                .catch((resError) => {\n                    report(resError);\n                    setUser(undefined);\n                    setToken(undefined);\n                    cookie.remove('token');\n                })\n                .finally(() => {\n                    setLoading(false);\n                });\n        } else {\n            setUser(undefined);\n            setLoading(false);\n        }\n        return () => {\n            setToken(undefined);\n            setUser(undefined);\n        };\n    }, [authUrl]);\n\n    return (\n        <AuthContext.Provider\n            value={{\n                createUserWithEmailAndPassword,\n                signInWithEmailAndPassword,\n                requestPasswordReset,\n                resetPassword,\n                logout,\n                user,\n                loading,\n                activate,\n                resendActivationLink,\n                token,\n            }}\n        >\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nconst useAuth = (): TAuthContext => React.useContext<TAuthContext>(AuthContext);\n\nexport {\n    AuthProvider,\n    AuthConsumer\n}\nexport default useAuth;\n"]},"metadata":{},"sourceType":"module"}