{"ast":null,"code":"import _toConsumableArray from \"/Users/tobias/Developer/digitalstage/ov-simulator/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/tobias/Developer/digitalstage/ov-simulator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ServerStageEvents } from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\nimport { StageMember } from \"../types/StageMember\";\nexport var addStageMember = function addStageMember(stageMember) {\n  return {\n    type: ServerStageEvents.STAGE_MEMBER_ADDED,\n    payload: StageMember\n  };\n};\nexport var changeStageMember = function changeStageMember(stageMember) {\n  return {\n    type: ServerStageEvents.STAGE_MEMBER_ADDED,\n    payload: stageMember\n  };\n};\nexport var removeStageMember = function removeStageMember(id) {\n  return {\n    type: ServerStageEvents.STAGE_MEMBER_REMOVED,\n    payload: id\n  };\n};\n\nfunction StageMemberReducer(state, action) {\n  switch (action.type) {\n    case ServerStageEvents.STAGE_MEMBER_ADDED:\n      {\n        var stageMember = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, stageMember._id, stageMember)),\n          byGroup: _objectSpread(_objectSpread({}, state.byGroup), {}, _defineProperty({}, stageMember.groupId, upsert(_toConsumableArray(state.byGroup[stageMember.groupId]), stageMember._id))),\n          allIds: upsert(state.allIds, stageMember._id)\n        };\n      }\n\n    case ServerStageEvents.STAGE_MEMBER_CHANGED:\n      {\n        var _stageMember = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, _stageMember._id, _objectSpread(_objectSpread({}, state.byId[_stageMember._id]), _stageMember)))\n        });\n      }\n\n    case ServerStageEvents.STAGE_MEMBER_REMOVED:\n      {\n        var removedId = action.payload;\n        var _stageMember2 = state.byId[removedId];\n        if (!_stageMember2) return state;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          byGroup: _objectSpread(_objectSpread({}, state.byGroup), {}, _defineProperty({}, _stageMember2.groupId, state.byGroup[_stageMember2.groupId].filter(function (id) {\n            return id !== removedId;\n          }))),\n          allIds: state.allIds.filter(function (id) {\n            return id !== removedId;\n          })\n        });\n      }\n\n    default:\n      throw new Error(\"Unsupported event: \" + action);\n  }\n}\n\n_c = StageMemberReducer;\nexport default StageMemberReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"StageMemberReducer\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/StageMemberReducer.ts"],"names":["ServerStageEvents","upsert","omit","StageMember","addStageMember","stageMember","type","STAGE_MEMBER_ADDED","payload","changeStageMember","removeStageMember","id","STAGE_MEMBER_REMOVED","StageMemberReducer","state","action","byId","_id","byGroup","groupId","allIds","STAGE_MEMBER_CHANGED","removedId","filter","Error"],"mappings":";;;;;;;AAAA,SAAQA,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAAQC,WAAR,QAA0B,sBAA1B;AAOA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD,EAA8B;AACxD,SAAO;AACHC,IAAAA,IAAI,EAAEN,iBAAiB,CAACO,kBADrB;AAEHC,IAAAA,OAAO,EAAEL;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,IAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,CAACJ,WAAD,EAA8B;AAC3D,SAAO;AACHC,IAAAA,IAAI,EAAEN,iBAAiB,CAACO,kBADrB;AAEHC,IAAAA,OAAO,EAAEH;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,EAAD,EAAgB;AAC7C,SAAO;AACHL,IAAAA,IAAI,EAAEN,iBAAiB,CAACY,oBADrB;AAEHJ,IAAAA,OAAO,EAAEG;AAFN,GAAP;AAIH,CALM;;AAiBP,SAASE,kBAAT,CAA4BC,KAA5B,EAAiDC,MAAjD,EAA0F;AACtF,UAAQA,MAAM,CAACT,IAAf;AACI,SAAKN,iBAAiB,CAACO,kBAAvB;AAA2C;AACvC,YAAMF,WAAwB,GAAGU,MAAM,CAACP,OAAxC;AACA,eAAO;AACHQ,UAAAA,IAAI,kCACGF,KAAK,CAACE,IADT,2BAECX,WAAW,CAACY,GAFb,EAEmBZ,WAFnB,EADD;AAKHa,UAAAA,OAAO,kCACAJ,KAAK,CAACI,OADN,2BAEFb,WAAW,CAACc,OAFV,EAEoBlB,MAAM,oBAAaa,KAAK,CAACI,OAAN,CAAcb,WAAW,CAACc,OAA1B,CAAb,GAAkDd,WAAW,CAACY,GAA9D,CAF1B,EALJ;AASHG,UAAAA,MAAM,EAAEnB,MAAM,CAASa,KAAK,CAACM,MAAf,EAAuBf,WAAW,CAACY,GAAnC;AATX,SAAP;AAWH;;AACD,SAAKjB,iBAAiB,CAACqB,oBAAvB;AAA6C;AACzC,YAAMhB,YAAwB,GAAGU,MAAM,CAACP,OAAxC;AACA,+CACOM,KADP;AAEIE,UAAAA,IAAI,kCACGF,KAAK,CAACE,IADT,2BAECX,YAAW,CAACY,GAFb,kCAGOH,KAAK,CAACE,IAAN,CAAWX,YAAW,CAACY,GAAvB,CAHP,GAIOZ,YAJP;AAFR;AAUH;;AACD,SAAKL,iBAAiB,CAACY,oBAAvB;AAA6C;AACzC,YAAMU,SAAiB,GAAGP,MAAM,CAACP,OAAjC;AACA,YAAMH,aAAwB,GAAGS,KAAK,CAACE,IAAN,CAAWM,SAAX,CAAjC;AACA,YAAI,CAACjB,aAAL,EACI,OAAOS,KAAP;AACJ,+CACOA,KADP;AAEIE,UAAAA,IAAI,EAAEd,IAAI,CAACY,KAAK,CAACE,IAAP,EAAaM,SAAb,CAFd;AAGIJ,UAAAA,OAAO,kCACAJ,KAAK,CAACI,OADN,2BAEFb,aAAW,CAACc,OAFV,EAEoBL,KAAK,CAACI,OAAN,CAAcb,aAAW,CAACc,OAA1B,EAAmCI,MAAnC,CAA0C,UAAAZ,EAAE;AAAA,mBAAIA,EAAE,KAAKW,SAAX;AAAA,WAA5C,CAFpB,EAHX;AAOIF,UAAAA,MAAM,EAAEN,KAAK,CAACM,MAAN,CAAaG,MAAb,CAAoB,UAAAZ,EAAE;AAAA,mBAAIA,EAAE,KAAKW,SAAX;AAAA,WAAtB;AAPZ;AASH;;AACD;AACI,YAAM,IAAIE,KAAJ,CAAU,wBAAwBT,MAAlC,CAAN;AA5CR;AA8CH;;KA/CQF,kB;AAiDT,eAAeA,kBAAf","sourcesContent":["import {ServerStageEvents} from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\nimport {StageMember} from \"../types/StageMember\";\n\nexport type StageMemberAction =\n    { type: ServerStageEvents.STAGE_MEMBER_ADDED, payload: StageMember }\n    | { type: ServerStageEvents.STAGE_MEMBER_CHANGED, payload: StageMember }\n    | { type: ServerStageEvents.STAGE_MEMBER_REMOVED, payload: string };\n\nexport const addStageMember = (stageMember: StageMember) => {\n    return {\n        type: ServerStageEvents.STAGE_MEMBER_ADDED,\n        payload: StageMember,\n    };\n};\nexport const changeStageMember = (stageMember: StageMember) => {\n    return {\n        type: ServerStageEvents.STAGE_MEMBER_ADDED,\n        payload: stageMember,\n    };\n};\nexport const removeStageMember = (id: string) => {\n    return {\n        type: ServerStageEvents.STAGE_MEMBER_REMOVED,\n        payload: id,\n    };\n};\n\nexport interface StageMembers {\n    byId: {\n        [id: string]: StageMember\n    },\n    byGroup: {\n        [groupId: string]: string[]\n    },\n    allIds: string[]\n}\n\nfunction StageMemberReducer(state: StageMembers, action: StageMemberAction): StageMembers {\n    switch (action.type) {\n        case ServerStageEvents.STAGE_MEMBER_ADDED: {\n            const stageMember: StageMember = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [stageMember._id]: stageMember\n                },\n                byGroup: {\n                    ...state.byGroup,\n                    [stageMember.groupId]: upsert<string>([...state.byGroup[stageMember.groupId]], stageMember._id),\n                },\n                allIds: upsert<string>(state.allIds, stageMember._id)\n            }\n        }\n        case ServerStageEvents.STAGE_MEMBER_CHANGED: {\n            const stageMember: StageMember = action.payload;\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [stageMember._id]: {\n                        ...state.byId[stageMember._id],\n                        ...stageMember\n                    }\n                }\n            }\n        }\n        case ServerStageEvents.STAGE_MEMBER_REMOVED: {\n            const removedId: string = action.payload;\n            const stageMember: StageMember = state.byId[removedId];\n            if (!stageMember)\n                return state;\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                byGroup: {\n                    ...state.byGroup,\n                    [stageMember.groupId]: state.byGroup[stageMember.groupId].filter(id => id !== removedId)\n                },\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n        default:\n            throw new Error(\"Unsupported event: \" + action);\n    }\n}\n\nexport default StageMemberReducer;\n"]},"metadata":{},"sourceType":"module"}