{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/components/SoundCardSimulator.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useCallback, useRef } from \"react\";\nimport { ClientDeviceEvents } from \"../utils/types/SocketEvents\";\nimport useStage from \"../libs/useStage\";\n\nvar AddSoundCardForm = function AddSoundCardForm() {\n  _s();\n\n  var _useStage = useStage(),\n      socket = _useStage.socket;\n\n  var nameRef = useRef();\n  var addSoundCard = useCallback(function () {\n    if (nameRef.current && socket) {\n      var name = nameRef.current.value;\n      var payload = {\n        initial: {\n          name: name,\n          driver: 'ALSA',\n          numInputChannels: 8,\n          numOutputChannels: 4,\n          sampleRate: 44100,\n          periodSize: 2,\n          numPeriods: 2\n        }\n      };\n      socket.emit(ClientDeviceEvents.ADD_SOUND_CARD, payload);\n    }\n  }, [socket, nameRef]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      ref: nameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: function onClick() {},\n      children: \"ADD SOUNDCARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(AddSoundCardForm, \"b3P7bOV7EerVDoi977ClqMkozOg=\", false, function () {\n  return [useStage];\n});\n\n_c = AddSoundCardForm;\n\nvar SoundCardSimulator = function SoundCardSimulator() {\n  _s2();\n\n  var _useStage2 = useStage(),\n      socket = _useStage2.socket,\n      soundCards = _useStage2.soundCards;\n\n  var removeSoundCard = useCallback(function (id) {\n    if (socket) {\n      socket.emit(ClientDeviceEvents.REMOVE_SOUND_CARD, id);\n    }\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: soundCards.allIds.map(function (id) {\n      return soundCards.byId[id];\n    }).map(function (soundCard) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [soundCard.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: function onClick() {\n            return removeSoundCard(soundCard._id);\n          },\n          children: \"DEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, _this);\n};\n\n_s2(SoundCardSimulator, \"f3la9UNCQoeJ775x6GXcIOB7L4I=\", false, function () {\n  return [useStage];\n});\n\n_c2 = SoundCardSimulator;\nexport default SoundCardSimulator;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AddSoundCardForm\");\n$RefreshReg$(_c2, \"SoundCardSimulator\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/components/SoundCardSimulator.tsx"],"names":["useCallback","useRef","ClientDeviceEvents","useStage","AddSoundCardForm","socket","nameRef","addSoundCard","current","name","value","payload","initial","driver","numInputChannels","numOutputChannels","sampleRate","periodSize","numPeriods","emit","ADD_SOUND_CARD","SoundCardSimulator","soundCards","removeSoundCard","id","REMOVE_SOUND_CARD","allIds","map","byId","soundCard","_id"],"mappings":";;;;;;;AAAA,SAAQA,WAAR,EAAgCC,MAAhC,QAAuD,OAAvD;AAEA,SAAQC,kBAAR,QAAiC,6BAAjC;AAIA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA;;AAAA,kBACVD,QAAQ,EADE;AAAA,MACpBE,MADoB,aACpBA,MADoB;;AAE3B,MAAMC,OAAO,GAAGL,MAAM,EAAtB;AAEA,MAAMM,YAAY,GAAGP,WAAW,CAAC,YAAM;AACnC,QAAIM,OAAO,CAACE,OAAR,IAAmBH,MAAvB,EAA+B;AAC3B,UAAMI,IAAI,GAAGH,OAAO,CAACE,OAAR,CAAgBE,KAA7B;AACA,UAAMC,OAA4B,GAAG;AACjCC,QAAAA,OAAO,EAAE;AACLH,UAAAA,IAAI,EAAEA,IADD;AAELI,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,gBAAgB,EAAE,CAHb;AAILC,UAAAA,iBAAiB,EAAE,CAJd;AAKLC,UAAAA,UAAU,EAAE,KALP;AAMLC,UAAAA,UAAU,EAAE,CANP;AAOLC,UAAAA,UAAU,EAAE;AAPP;AADwB,OAArC;AAWAb,MAAAA,MAAM,CAACc,IAAP,CAAYjB,kBAAkB,CAACkB,cAA/B,EAA+CT,OAA/C;AACH;AACJ,GAhB+B,EAgB7B,CAACN,MAAD,EAASC,OAAT,CAhB6B,CAAhC;AAkBA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,aADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,mBAAM,CAEpC,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAUH,CAhCD;;GAAMF,gB;UACeD,Q;;;KADfC,gB;;AAkCN,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA;;AAAA,mBACAlB,QAAQ,EADR;AAAA,MACtBE,MADsB,cACtBA,MADsB;AAAA,MACdiB,UADc,cACdA,UADc;;AAG7B,MAAMC,eAAe,GAAGvB,WAAW,CAAC,UAACwB,EAAD,EAAgB;AAChD,QAAInB,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACc,IAAP,CAAYjB,kBAAkB,CAACuB,iBAA/B,EAAkDD,EAAlD;AACH;AACJ,GAJkC,EAIhC,CAACnB,MAAD,CAJgC,CAAnC;AAMA,sBACI;AAAA,cACKiB,UAAU,CAACI,MAAX,CAAkBC,GAAlB,CAAsB,UAAAH,EAAE;AAAA,aAAIF,UAAU,CAACM,IAAX,CAAgBJ,EAAhB,CAAJ;AAAA,KAAxB,EAAiDG,GAAjD,CAAqD,UAAAE,SAAS;AAAA,0BAC3D;AAAA,mBACKA,SAAS,CAACpB,IADf,eAEI;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAMc,eAAe,CAACM,SAAS,CAACC,GAAX,CAArB;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,eAD2D;AAAA,KAA9D;AADL;AAAA;AAAA;AAAA;AAAA,WADJ;AAaH,CAtBD;;IAAMT,kB;UAC2BlB,Q;;;MAD3BkB,kB;AAuBN,eAAeA,kBAAf","sourcesContent":["import {useCallback, useEffect, useRef, useState} from \"react\";\nimport ITeckosClient from \"teckos-client/dist/ITeckosClient\";\nimport {ClientDeviceEvents} from \"../utils/types/SocketEvents\";\nimport {Device} from \"../utils/types/Device\";\nimport {AddSoundCardPayload} from \"../utils/types/SocketPayloads\";\nimport {SoundCard} from \"../utils/types/SoundCard\";\nimport useStage from \"../libs/useStage\";\n\nconst AddSoundCardForm = () => {\n    const {socket} = useStage();\n    const nameRef = useRef<HTMLInputElement>();\n\n    const addSoundCard = useCallback(() => {\n        if (nameRef.current && socket) {\n            const name = nameRef.current.value;\n            const payload: AddSoundCardPayload = {\n                initial: {\n                    name: name,\n                    driver: 'ALSA',\n                    numInputChannels: 8,\n                    numOutputChannels: 4,\n                    sampleRate: 44100,\n                    periodSize: 2,\n                    numPeriods: 2\n                }\n            };\n            socket.emit(ClientDeviceEvents.ADD_SOUND_CARD, payload);\n        }\n    }, [socket, nameRef])\n\n    return (\n        <form>\n            <input type=\"name\" ref={nameRef}/>\n            <button type=\"submit\" onClick={() => {\n\n            }}>\n                ADD SOUNDCARD\n            </button>\n        </form>\n    )\n};\n\nconst SoundCardSimulator = () => {\n    const {socket, soundCards} = useStage();\n\n    const removeSoundCard = useCallback((id: string) => {\n        if (socket) {\n            socket.emit(ClientDeviceEvents.REMOVE_SOUND_CARD, id);\n        }\n    }, [socket])\n\n    return (\n        <div>\n            {soundCards.allIds.map(id => soundCards.byId[id]).map(soundCard => (\n                <li>\n                    {soundCard.name}\n                    <button onClick={() => removeSoundCard(soundCard._id)}>\n                        DEL\n                    </button>\n                </li>\n            ))}\n\n        </div>\n    )\n};\nexport default SoundCardSimulator;\n"]},"metadata":{},"sourceType":"module"}