{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ServerStageEvents } from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\n\nfunction RemoteTrackReducer(state, action) {\n  switch (action.type) {\n    case ServerStageEvents.STAGE_MEMBER_OV_ADDED:\n      {\n        const remoteTrack = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, {\n            [remoteTrack._id]: remoteTrack\n          }),\n          byStageMember: _objectSpread(_objectSpread({}, state.byStageMember), {}, {\n            [remoteTrack.stageMemberId]: upsert([...state.byStageMember[remoteTrack.stageMemberId]], remoteTrack._id)\n          }),\n          allIds: upsert(state.allIds, remoteTrack._id)\n        };\n      }\n\n    case ServerStageEvents.STAGE_MEMBER_OV_CHANGED:\n      {\n        const remoteTrack = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, {\n            [remoteTrack._id]: _objectSpread(_objectSpread({}, state.byId[remoteTrack._id]), remoteTrack)\n          })\n        });\n      }\n\n    case ServerStageEvents.STAGE_MEMBER_OV_REMOVED:\n      {\n        const removedId = action.payload;\n        const remoteTrack = state.byId[removedId];\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          byStageMember: _objectSpread(_objectSpread({}, state.byStageMember), {}, {\n            [remoteTrack.stageMemberId]: state.byStageMember[remoteTrack.stageMemberId].filter(id => id !== removedId)\n          }),\n          allIds: state.allIds.filter(id => id !== removedId)\n        });\n      }\n\n    default:\n      throw new Error();\n  }\n}\n\nexport default RemoteTrackReducer;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/RemoteTrackReducer.ts"],"names":["ServerStageEvents","upsert","omit","RemoteTrackReducer","state","action","type","STAGE_MEMBER_OV_ADDED","remoteTrack","payload","byId","_id","byStageMember","stageMemberId","allIds","STAGE_MEMBER_OV_CHANGED","STAGE_MEMBER_OV_REMOVED","removedId","filter","id","Error"],"mappings":";;;;;;AAAA,SAAQA,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAkBA,SAASC,kBAAT,CAA4BC,KAA5B,EAAiDC,MAAjD,EAA0F;AACtF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,iBAAiB,CAACO,qBAAvB;AAA8C;AAC1C,cAAMC,WAA+B,GAAGH,MAAM,CAACI,OAA/C;AACA,eAAO;AACHC,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT;AAEA,aAACF,WAAW,CAACG,GAAb,GAAmBH;AAFnB,YADD;AAKHI,UAAAA,aAAa,kCACNR,KAAK,CAACQ,aADA;AAET,aAACJ,WAAW,CAACK,aAAb,GAA6BZ,MAAM,CAAS,CAAC,GAAGG,KAAK,CAACQ,aAAN,CAAoBJ,WAAW,CAACK,aAAhC,CAAJ,CAAT,EAA8DL,WAAW,CAACG,GAA1E;AAF1B,YALV;AASHG,UAAAA,MAAM,EAAEb,MAAM,CAASG,KAAK,CAACU,MAAf,EAAuBN,WAAW,CAACG,GAAnC;AATX,SAAP;AAWH;;AACD,SAAKX,iBAAiB,CAACe,uBAAvB;AAAgD;AAC5C,cAAMP,WAA+B,GAAGH,MAAM,CAACI,OAA/C;AACA,+CACOL,KADP;AAEIM,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT;AAEA,aAACF,WAAW,CAACG,GAAb,mCACOP,KAAK,CAACM,IAAN,CAAWF,WAAW,CAACG,GAAvB,CADP,GAEOH,WAFP;AAFA;AAFR;AAUH;;AACD,SAAKR,iBAAiB,CAACgB,uBAAvB;AAAgD;AAC5C,cAAMC,SAAiB,GAAGZ,MAAM,CAACI,OAAjC;AACA,cAAMD,WAA+B,GAAGJ,KAAK,CAACM,IAAN,CAAWO,SAAX,CAAxC;AACA,+CACOb,KADP;AAEIM,UAAAA,IAAI,EAAER,IAAI,CAACE,KAAK,CAACM,IAAP,EAAaO,SAAb,CAFd;AAGIL,UAAAA,aAAa,kCACNR,KAAK,CAACQ,aADA;AAET,aAACJ,WAAW,CAACK,aAAb,GAA6BT,KAAK,CAACQ,aAAN,CAAoBJ,WAAW,CAACK,aAAhC,EAA+CK,MAA/C,CAAsDC,EAAE,IAAIA,EAAE,KAAKF,SAAnE;AAFpB,YAHjB;AAOIH,UAAAA,MAAM,EAAEV,KAAK,CAACU,MAAN,CAAaI,MAAb,CAAoBC,EAAE,IAAIA,EAAE,KAAKF,SAAjC;AAPZ;AASH;;AACD;AACI,YAAM,IAAIG,KAAJ,EAAN;AA1CR;AA4CH;;AAED,eAAejB,kBAAf","sourcesContent":["import {ServerStageEvents} from \"../types/SocketEvents\";\nimport upsert from \"./upsert\";\nimport omit from 'lodash/omit';\nimport {StageMemberOvTrack} from \"../types/StageMemberOvTrack\";\n\nexport type RemoteTrackAction =\n    { type: ServerStageEvents.STAGE_MEMBER_OV_ADDED, payload: StageMemberOvTrack }\n    | { type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED, payload: StageMemberOvTrack }\n    | { type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED, payload: string };\n\nexport interface RemoteTracks {\n    byId: {\n        [id: string]: StageMemberOvTrack\n    }\n    byStageMember: {\n        [stageMemberId: string]: string[]\n    }\n    allIds: string[]\n}\n\nfunction RemoteTrackReducer(state: RemoteTracks, action: RemoteTrackAction): RemoteTracks {\n    switch (action.type) {\n        case ServerStageEvents.STAGE_MEMBER_OV_ADDED: {\n            const remoteTrack: StageMemberOvTrack = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [remoteTrack._id]: remoteTrack\n                },\n                byStageMember: {\n                    ...state.byStageMember,\n                    [remoteTrack.stageMemberId]: upsert<string>([...state.byStageMember[remoteTrack.stageMemberId]], remoteTrack._id),\n                },\n                allIds: upsert<string>(state.allIds, remoteTrack._id)\n            }\n        }\n        case ServerStageEvents.STAGE_MEMBER_OV_CHANGED: {\n            const remoteTrack: StageMemberOvTrack = action.payload;\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [remoteTrack._id]: {\n                        ...state.byId[remoteTrack._id],\n                        ...remoteTrack\n                    }\n                }\n            }\n        }\n        case ServerStageEvents.STAGE_MEMBER_OV_REMOVED: {\n            const removedId: string = action.payload;\n            const remoteTrack: StageMemberOvTrack = state.byId[removedId];\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                byStageMember: {\n                    ...state.byStageMember,\n                    [remoteTrack.stageMemberId]: state.byStageMember[remoteTrack.stageMemberId].filter(id => id !== removedId)\n                },\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n        default:\n            throw new Error();\n    }\n}\n\nexport default RemoteTrackReducer;\n"]},"metadata":{},"sourceType":"module"}