{"ast":null,"code":"import _defineProperty from \"/Users/tobias/Developer/digitalstage/ov-simulator/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ServerDeviceEvents } from \"../types/SocketEvents\";\nimport upsert from \"../upsert\";\nimport omit from 'lodash/omit';\n\nfunction TrackPresetReducer(state, action) {\n  switch (action.type) {\n    case ServerDeviceEvents.TRACK_PRESET_ADDED:\n      {\n        var trackPreset = action.payload;\n        return {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, trackPreset._id, trackPreset)),\n          bySoundCard: _objectSpread(_objectSpread({}, state.bySoundCard), {}, _defineProperty({}, trackPreset.soundCardId, upsert(state.bySoundCard[trackPreset.soundCardId] || [], trackPreset._id))),\n          allIds: upsert(state.allIds, trackPreset._id)\n        };\n      }\n\n    case ServerDeviceEvents.TRACK_PRESET_CHANGED:\n      {\n        var _trackPreset = action.payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: _objectSpread(_objectSpread({}, state.byId), {}, _defineProperty({}, _trackPreset._id, _objectSpread(_objectSpread({}, state.byId[_trackPreset._id]), _trackPreset)))\n        });\n      }\n\n    case ServerDeviceEvents.TRACK_PRESET_REMOVED:\n      {\n        var removedId = action.payload;\n        var _trackPreset2 = state.byId[removedId];\n        if (!_trackPreset2) return state;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          byId: omit(state.byId, removedId),\n          bySoundCard: _objectSpread(_objectSpread({}, state.bySoundCard), {}, _defineProperty({}, _trackPreset2.soundCardId, state.bySoundCard[_trackPreset2.soundCardId].filter(function (id) {\n            return id !== removedId;\n          }))),\n          allIds: state.allIds.filter(function (id) {\n            return id !== removedId;\n          })\n        });\n      }\n\n    default:\n      throw new Error();\n  }\n}\n\n_c = TrackPresetReducer;\nexport default TrackPresetReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackPresetReducer\");","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/utils/reducers/TrackPresetReducer.ts"],"names":["ServerDeviceEvents","upsert","omit","TrackPresetReducer","state","action","type","TRACK_PRESET_ADDED","trackPreset","payload","byId","_id","bySoundCard","soundCardId","allIds","TRACK_PRESET_CHANGED","TRACK_PRESET_REMOVED","removedId","filter","id","Error"],"mappings":";;;;;;AAAA,SAAQA,kBAAR,QAAiC,uBAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAkBA,SAASC,kBAAT,CAA4BC,KAA5B,EAAiDC,MAAjD,EAA0F;AACtF,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,kBAAkB,CAACO,kBAAxB;AAA4C;AACxC,YAAMC,WAAwB,GAAGH,MAAM,CAACI,OAAxC;AACA,eAAO;AACHC,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECF,WAAW,CAACG,GAFb,EAEmBH,WAFnB,EADD;AAKHI,UAAAA,WAAW,kCACJR,KAAK,CAACQ,WADF,2BAENJ,WAAW,CAACK,WAFN,EAEoBZ,MAAM,CAASG,KAAK,CAACQ,WAAN,CAAkBJ,WAAW,CAACK,WAA9B,KAA8C,EAAvD,EAA2DL,WAAW,CAACG,GAAvE,CAF1B,EALR;AASHG,UAAAA,MAAM,EAAEb,MAAM,CAASG,KAAK,CAACU,MAAf,EAAuBN,WAAW,CAACG,GAAnC;AATX,SAAP;AAWH;;AACD,SAAKX,kBAAkB,CAACe,oBAAxB;AAA8C;AAC1C,YAAMP,YAAwB,GAAGH,MAAM,CAACI,OAAxC;AACA,+CACOL,KADP;AAEIM,UAAAA,IAAI,kCACGN,KAAK,CAACM,IADT,2BAECF,YAAW,CAACG,GAFb,kCAGOP,KAAK,CAACM,IAAN,CAAWF,YAAW,CAACG,GAAvB,CAHP,GAIOH,YAJP;AAFR;AAUH;;AACD,SAAKR,kBAAkB,CAACgB,oBAAxB;AAA8C;AAC1C,YAAMC,SAAiB,GAAGZ,MAAM,CAACI,OAAjC;AACA,YAAMD,aAAwB,GAAGJ,KAAK,CAACM,IAAN,CAAWO,SAAX,CAAjC;AACA,YAAI,CAACT,aAAL,EACI,OAAOJ,KAAP;AACJ,+CACOA,KADP;AAEIM,UAAAA,IAAI,EAAER,IAAI,CAACE,KAAK,CAACM,IAAP,EAAaO,SAAb,CAFd;AAGIL,UAAAA,WAAW,kCACJR,KAAK,CAACQ,WADF,2BAENJ,aAAW,CAACK,WAFN,EAEoBT,KAAK,CAACQ,WAAN,CAAkBJ,aAAW,CAACK,WAA9B,EAA2CK,MAA3C,CAAkD,UAAAC,EAAE;AAAA,mBAAIA,EAAE,KAAKF,SAAX;AAAA,WAApD,CAFpB,EAHf;AAOIH,UAAAA,MAAM,EAAEV,KAAK,CAACU,MAAN,CAAaI,MAAb,CAAoB,UAAAC,EAAE;AAAA,mBAAIA,EAAE,KAAKF,SAAX;AAAA,WAAtB;AAPZ;AASH;;AACD;AACI,YAAM,IAAIG,KAAJ,EAAN;AA5CR;AA8CH;;KA/CQjB,kB;AAiDT,eAAeA,kBAAf","sourcesContent":["import {ServerDeviceEvents} from \"../types/SocketEvents\";\nimport upsert from \"../upsert\";\nimport omit from 'lodash/omit';\nimport {TrackPreset} from \"../types/TrackPreset\";\n\nexport type TrackPresetAction =\n    { type: ServerDeviceEvents.TRACK_PRESET_ADDED, payload: TrackPreset }\n    | { type: ServerDeviceEvents.TRACK_PRESET_CHANGED, payload: TrackPreset }\n    | { type: ServerDeviceEvents.TRACK_PRESET_REMOVED, payload: string };\n\nexport interface TrackPresets {\n    byId: {\n        [id: string]: TrackPreset\n    }\n    bySoundCard: {\n        [soundCardId: string]: string[]\n    }\n    allIds: string[]\n}\n\nfunction TrackPresetReducer(state: TrackPresets, action: TrackPresetAction): TrackPresets {\n    switch (action.type) {\n        case ServerDeviceEvents.TRACK_PRESET_ADDED: {\n            const trackPreset: TrackPreset = action.payload;\n            return {\n                byId: {\n                    ...state.byId,\n                    [trackPreset._id]: trackPreset\n                },\n                bySoundCard: {\n                    ...state.bySoundCard,\n                    [trackPreset.soundCardId]: upsert<string>(state.bySoundCard[trackPreset.soundCardId] || [], trackPreset._id),\n                },\n                allIds: upsert<string>(state.allIds, trackPreset._id)\n            }\n        }\n        case ServerDeviceEvents.TRACK_PRESET_CHANGED: {\n            const trackPreset: TrackPreset = action.payload;\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [trackPreset._id]: {\n                        ...state.byId[trackPreset._id],\n                        ...trackPreset\n                    }\n                }\n            }\n        }\n        case ServerDeviceEvents.TRACK_PRESET_REMOVED: {\n            const removedId: string = action.payload;\n            const trackPreset: TrackPreset = state.byId[removedId];\n            if (!trackPreset)\n                return state;\n            return {\n                ...state,\n                byId: omit(state.byId, removedId),\n                bySoundCard: {\n                    ...state.bySoundCard,\n                    [trackPreset.soundCardId]: state.bySoundCard[trackPreset.soundCardId].filter(id => id !== removedId)\n                },\n                allIds: state.allIds.filter(id => id !== removedId)\n            }\n        }\n        default:\n            throw new Error();\n    }\n}\n\nexport default TrackPresetReducer;\n"]},"metadata":{},"sourceType":"module"}