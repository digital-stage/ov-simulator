{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/components/SoundCardSimulator.tsx\";\nimport { useCallback, useRef } from \"react\";\nimport { ClientDeviceEvents } from \"../utils/types/SocketEvents\";\nimport useStage from \"../libs/useStage\";\n\nconst AddSoundCardForm = () => {\n  const {\n    socket\n  } = useStage();\n  const nameRef = useRef();\n  const addSoundCard = useCallback(() => {\n    if (nameRef.current && socket) {\n      const name = nameRef.current.value;\n      const payload = {\n        initial: {\n          name: name,\n          driver: 'ALSA',\n          numInputChannels: 8,\n          numOutputChannels: 4,\n          sampleRate: 44100,\n          periodSize: 2,\n          numPeriods: 2\n        }\n      };\n      socket.emit(ClientDeviceEvents.ADD_SOUND_CARD, payload);\n    }\n  }, [socket, nameRef]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"name\",\n      ref: nameRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: () => {},\n      children: \"ADD SOUNDCARD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\nconst SoundCardSimulator = () => {\n  const {\n    socket,\n    soundCards\n  } = useStage();\n  const removeSoundCard = useCallback(id => {\n    if (socket) {\n      socket.emit(ClientDeviceEvents.REMOVE_SOUND_CARD, id);\n    }\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: soundCards.allIds.map(id => soundCards.byId[id]).map(soundCard => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [soundCard.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeSoundCard(soundCard._id),\n        children: \"DEL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\nexport default SoundCardSimulator;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/components/SoundCardSimulator.tsx"],"names":["useCallback","useRef","ClientDeviceEvents","useStage","AddSoundCardForm","socket","nameRef","addSoundCard","current","name","value","payload","initial","driver","numInputChannels","numOutputChannels","sampleRate","periodSize","numPeriods","emit","ADD_SOUND_CARD","SoundCardSimulator","soundCards","removeSoundCard","id","REMOVE_SOUND_CARD","allIds","map","byId","soundCard","_id"],"mappings":";;AAAA,SAAQA,WAAR,EAAgCC,MAAhC,QAAuD,OAAvD;AAEA,SAAQC,kBAAR,QAAiC,6BAAjC;AAIA,OAAOC,QAAP,MAAqB,kBAArB;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAWF,QAAQ,EAAzB;AACA,QAAMG,OAAO,GAAGL,MAAM,EAAtB;AAEA,QAAMM,YAAY,GAAGP,WAAW,CAAC,MAAM;AACnC,QAAIM,OAAO,CAACE,OAAR,IAAmBH,MAAvB,EAA+B;AAC3B,YAAMI,IAAI,GAAGH,OAAO,CAACE,OAAR,CAAgBE,KAA7B;AACA,YAAMC,OAA4B,GAAG;AACjCC,QAAAA,OAAO,EAAE;AACLH,UAAAA,IAAI,EAAEA,IADD;AAELI,UAAAA,MAAM,EAAE,MAFH;AAGLC,UAAAA,gBAAgB,EAAE,CAHb;AAILC,UAAAA,iBAAiB,EAAE,CAJd;AAKLC,UAAAA,UAAU,EAAE,KALP;AAMLC,UAAAA,UAAU,EAAE,CANP;AAOLC,UAAAA,UAAU,EAAE;AAPP;AADwB,OAArC;AAWAb,MAAAA,MAAM,CAACc,IAAP,CAAYjB,kBAAkB,CAACkB,cAA/B,EAA+CT,OAA/C;AACH;AACJ,GAhB+B,EAgB7B,CAACN,MAAD,EAASC,OAAT,CAhB6B,CAAhC;AAkBA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAE,MAAM,CAEpC,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAhCD;;AAkCA,MAAMe,kBAAkB,GAAG,MAAM;AAC7B,QAAM;AAAChB,IAAAA,MAAD;AAASiB,IAAAA;AAAT,MAAuBnB,QAAQ,EAArC;AAEA,QAAMoB,eAAe,GAAGvB,WAAW,CAAEwB,EAAD,IAAgB;AAChD,QAAInB,MAAJ,EAAY;AACRA,MAAAA,MAAM,CAACc,IAAP,CAAYjB,kBAAkB,CAACuB,iBAA/B,EAAkDD,EAAlD;AACH;AACJ,GAJkC,EAIhC,CAACnB,MAAD,CAJgC,CAAnC;AAMA,sBACI;AAAA,cACKiB,UAAU,CAACI,MAAX,CAAkBC,GAAlB,CAAsBH,EAAE,IAAIF,UAAU,CAACM,IAAX,CAAgBJ,EAAhB,CAA5B,EAAiDG,GAAjD,CAAqDE,SAAS,iBAC3D;AAAA,iBACKA,SAAS,CAACpB,IADf,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMc,eAAe,CAACM,SAAS,CAACC,GAAX,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAtBD;;AAuBA,eAAeT,kBAAf","sourcesContent":["import {useCallback, useEffect, useRef, useState} from \"react\";\nimport ITeckosClient from \"teckos-client/dist/ITeckosClient\";\nimport {ClientDeviceEvents} from \"../utils/types/SocketEvents\";\nimport {Device} from \"../utils/types/Device\";\nimport {AddSoundCardPayload} from \"../utils/types/SocketPayloads\";\nimport {SoundCard} from \"../utils/types/SoundCard\";\nimport useStage from \"../libs/useStage\";\n\nconst AddSoundCardForm = () => {\n    const {socket} = useStage();\n    const nameRef = useRef<HTMLInputElement>();\n\n    const addSoundCard = useCallback(() => {\n        if (nameRef.current && socket) {\n            const name = nameRef.current.value;\n            const payload: AddSoundCardPayload = {\n                initial: {\n                    name: name,\n                    driver: 'ALSA',\n                    numInputChannels: 8,\n                    numOutputChannels: 4,\n                    sampleRate: 44100,\n                    periodSize: 2,\n                    numPeriods: 2\n                }\n            };\n            socket.emit(ClientDeviceEvents.ADD_SOUND_CARD, payload);\n        }\n    }, [socket, nameRef])\n\n    return (\n        <form>\n            <input type=\"name\" ref={nameRef}/>\n            <button type=\"submit\" onClick={() => {\n\n            }}>\n                ADD SOUNDCARD\n            </button>\n        </form>\n    )\n};\n\nconst SoundCardSimulator = () => {\n    const {socket, soundCards} = useStage();\n\n    const removeSoundCard = useCallback((id: string) => {\n        if (socket) {\n            socket.emit(ClientDeviceEvents.REMOVE_SOUND_CARD, id);\n        }\n    }, [socket])\n\n    return (\n        <div>\n            {soundCards.allIds.map(id => soundCards.byId[id]).map(soundCard => (\n                <li>\n                    {soundCard.name}\n                    <button onClick={() => removeSoundCard(soundCard._id)}>\n                        DEL\n                    </button>\n                </li>\n            ))}\n\n        </div>\n    )\n};\nexport default SoundCardSimulator;\n"]},"metadata":{},"sourceType":"module"}