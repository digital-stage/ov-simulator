{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx\";\nimport { createContext, useContext, useEffect, useReducer, useState } from \"react\";\nimport StageMemberReducer, { addStageMember, changeStageMember, removeStageMember } from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer from \"../utils/reducers/RemoteTrackReducer\";\nimport { TeckosClientWithJWT } from \"teckos-client\";\nimport TrackPresetReducer from \"../utils/reducers/TrackPresetReducer\";\nimport { ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents } from \"../utils/types/SocketEvents\";\nimport * as React from \"react\";\nimport CustomRemoteTrackReducer from \"../utils/reducers/CustomRemoteTrackReducer\";\nconst InitialState = {\n  soundCards: {\n    byId: {},\n    allIds: []\n  },\n  presets: {\n    byId: {},\n    bySoundCard: {},\n    allIds: []\n  },\n  tracks: {\n    byId: {},\n    bySoundCard: {},\n    byPreset: {},\n    allIds: []\n  },\n  stageMembers: {\n    byId: {},\n    byGroup: {},\n    allIds: []\n  },\n  customStageMembers: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  },\n  remoteTracks: {\n    byId: {},\n    byStageMember: {},\n    allIds: []\n  },\n  customRemoteTracks: {\n    byId: {},\n    byRemoteTrack: {},\n    allIds: []\n  }\n};\nconst Context = /*#__PURE__*/createContext(InitialState);\n\nconst StageProvider = props => {\n  const {\n    children,\n    token\n  } = props;\n  const {\n    1: setSocket\n  } = useState();\n  const {\n    0: device,\n    1: setDevice\n  } = useState(); // OV related entities\n\n  const {\n    0: soundCards,\n    1: dispatchSoundCard\n  } = useReducer(SoundCardReducer, InitialState.soundCards);\n  const {\n    0: presets,\n    1: dispatchPresets\n  } = useReducer(TrackPresetReducer, InitialState.presets);\n  const {\n    0: tracks,\n    1: dispatchTracks\n  } = useReducer(TrackReducer, InitialState.tracks); // Digital stage related entities\n\n  const {\n    0: stageMembers,\n    1: dispatchStageMembers\n  } = useReducer(StageMemberReducer, InitialState.stageMembers);\n  const {\n    0: customStageMembers,\n    1: dispatchCustomStageMembers\n  } = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n  const {\n    0: remoteTracks,\n    1: dispatchRemoteTracks\n  } = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n  const {\n    0: customRemoteTracks,\n    1: dispatchCustomRemoteTracks\n  } = useReducer(CustomRemoteTrackReducer, InitialState.customRemoteTracks);\n  useEffect(() => {\n    // Got token, register self as device\n    const initialDevice = {\n      name: 'OV Simulator',\n      canOv: true,\n      canAudio: true,\n      sendAudio: true,\n      receiveAudio: true,\n      soundCardIds: []\n    };\n    const nSocket = new TeckosClientWithJWT(process.env.NEXT_PUBLIC_API_URL, {\n      reconnection: true,\n      timeout: 1000\n    }, token, {\n      device: initialDevice\n    });\n    nSocket.on(\"connect\", () => {\n      console.log(\"connected!\");\n    });\n    nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, device => {\n      setDevice(device);\n    });\n    nSocket.on(ServerDeviceEvents.SOUND_CARD_ADDED, payload => dispatchSoundCard({\n      type: ServerDeviceEvents.SOUND_CARD_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.SOUND_CARD_CHANGED, payload => dispatchSoundCard({\n      type: ServerDeviceEvents.SOUND_CARD_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.SOUND_CARD_REMOVED, payload => dispatchSoundCard({\n      type: ServerDeviceEvents.SOUND_CARD_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_PRESET_ADDED, payload => dispatchPresets({\n      type: ServerDeviceEvents.TRACK_PRESET_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_PRESET_CHANGED, payload => dispatchPresets({\n      type: ServerDeviceEvents.TRACK_PRESET_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_PRESET_REMOVED, payload => dispatchPresets({\n      type: ServerDeviceEvents.TRACK_PRESET_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_ADDED, payload => dispatchTracks({\n      type: ServerDeviceEvents.TRACK_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_CHANGED, payload => dispatchTracks({\n      type: ServerDeviceEvents.TRACK_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerDeviceEvents.TRACK_REMOVED, payload => dispatchTracks({\n      type: ServerDeviceEvents.TRACK_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers(addStageMember(payload)));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers(changeStageMember(payload)));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers(removeStageMember(payload)));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers({\n      type: ServerStageEvents.STAGE_MEMBER_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, payload => dispatchCustomStageMembers({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, payload => dispatchRemoteTracks({\n      type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, payload => dispatchCustomRemoteTracks({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, payload => dispatchCustomRemoteTracks({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED,\n      payload: payload\n    }));\n    nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, payload => dispatchCustomRemoteTracks({\n      type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED,\n      payload: payload\n    }));\n    nSocket.on(ServerGlobalEvents.STAGE_JOINED, payload => {\n      // Handle package with many stage related entities\n      payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n      payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n        payload: customStageMember\n      }));\n      payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n        type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n        payload: ovTrack\n      }));\n      payload.customOvTracks.forEach(customRemoteTrack => dispatchCustomRemoteTracks({\n        type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n        payload: customRemoteTrack\n      }));\n    });\n    nSocket.connect();\n    setSocket(nSocket);\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      device,\n      soundCards,\n      presets,\n      tracks,\n      stageMembers,\n      customStageMembers,\n      remoteTracks,\n      customRemoteTracks\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 9\n  }, this);\n};\n\nexport { StageProvider };\n\nconst useStage = () => useContext(Context);\n\nexport default useStage;","map":{"version":3,"sources":["/Users/tobias/Developer/digitalstage/ov-simulator/libs/useStage.tsx"],"names":["createContext","useContext","useEffect","useReducer","useState","StageMemberReducer","addStageMember","changeStageMember","removeStageMember","CustomStageMemberReducer","TrackReducer","SoundCardReducer","RemoteTrackReducer","TeckosClientWithJWT","TrackPresetReducer","ServerDeviceEvents","ServerGlobalEvents","ServerStageEvents","React","CustomRemoteTrackReducer","InitialState","soundCards","byId","allIds","presets","bySoundCard","tracks","byPreset","stageMembers","byGroup","customStageMembers","byStageMember","remoteTracks","customRemoteTracks","byRemoteTrack","Context","StageProvider","props","children","token","setSocket","device","setDevice","dispatchSoundCard","dispatchPresets","dispatchTracks","dispatchStageMembers","dispatchCustomStageMembers","dispatchRemoteTracks","dispatchCustomRemoteTracks","initialDevice","name","canOv","canAudio","sendAudio","receiveAudio","soundCardIds","nSocket","process","env","NEXT_PUBLIC_API_URL","reconnection","timeout","on","console","log","LOCAL_DEVICE_READY","SOUND_CARD_ADDED","payload","type","SOUND_CARD_CHANGED","SOUND_CARD_REMOVED","TRACK_PRESET_ADDED","TRACK_PRESET_CHANGED","TRACK_PRESET_REMOVED","TRACK_ADDED","TRACK_CHANGED","TRACK_REMOVED","STAGE_MEMBER_ADDED","STAGE_MEMBER_CHANGED","STAGE_MEMBER_REMOVED","CUSTOM_STAGE_MEMBER_ADDED","CUSTOM_STAGE_MEMBER_CHANGED","CUSTOM_STAGE_MEMBER_REMOVED","STAGE_MEMBER_OV_ADDED","STAGE_MEMBER_OV_CHANGED","STAGE_MEMBER_OV_REMOVED","CUSTOM_STAGE_MEMBER_OV_ADDED","CUSTOM_STAGE_MEMBER_OV_CHANGED","CUSTOM_STAGE_MEMBER_OV_REMOVED","STAGE_JOINED","forEach","stageMember","customStageMember","ovTracks","ovTrack","customOvTracks","customRemoteTrack","connect","useStage"],"mappings":"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","sourcesContent":["import {createContext, useContext, useEffect, useReducer, useState} from \"react\";\nimport StageMemberReducer, {\n    addStageMember,\n    changeStageMember, removeStageMember,\n    StageMembers\n} from \"../utils/reducers/StageMemberReducer\";\nimport CustomStageMemberReducer, {CustomStageMembers} from \"../utils/reducers/CustomStageMemberReducer\";\nimport TrackReducer, {Tracks} from \"../utils/reducers/TrackReducer\";\nimport SoundCardReducer, {SoundCards} from \"../utils/reducers/SoundCardReducer\";\nimport RemoteTrackReducer, {RemoteTracks} from \"../utils/reducers/RemoteTrackReducer\";\nimport {ITeckosClient, TeckosClientWithJWT} from \"teckos-client\";\nimport {Device} from \"../utils/types/Device\";\nimport TrackPresetReducer, {TrackPresets} from \"../utils/reducers/TrackPresetReducer\";\nimport {ServerDeviceEvents, ServerGlobalEvents, ServerStageEvents} from \"../utils/types/SocketEvents\";\nimport {InitialStagePackage} from \"../utils/types/InitialStagePackage\";\nimport * as React from \"react\";\nimport {StageMemberOvTrack} from \"../utils/types/StageMemberOvTrack\";\nimport CustomRemoteTrackReducer, {CustomRemoteTracks} from \"../utils/reducers/CustomRemoteTrackReducer\";\nimport {CustomRemoteOvTrack} from \"../utils/types/CustomRemoteOvTrack\";\nimport {SoundCard} from \"../utils/types/SoundCard\";\nimport {Track} from \"../utils/types/Track\";\nimport {TrackPreset} from \"../utils/types/TrackPreset\";\nimport {StageMember} from \"../utils/types/StageMember\";\nimport {CustomStageMember} from \"../utils/types/CustomStageMember\";\n\ninterface StageContext {\n    device?: Device;\n    soundCards: SoundCards;\n    presets: TrackPresets;\n    tracks: Tracks;\n\n    stageMembers: StageMembers;\n    customStageMembers: CustomStageMembers;\n\n    remoteTracks: RemoteTracks;\n    customRemoteTracks: CustomRemoteTracks;\n}\n\nconst InitialState: StageContext = {\n    soundCards: {\n        byId: {},\n        allIds: []\n    },\n    presets: {\n        byId: {},\n        bySoundCard: {},\n        allIds: []\n    },\n    tracks: {\n        byId: {},\n        bySoundCard: {},\n        byPreset: {},\n        allIds: []\n    },\n    stageMembers: {\n        byId: {},\n        byGroup: {},\n        allIds: []\n    },\n    customStageMembers: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    },\n    remoteTracks: {\n        byId: {},\n        byStageMember: {},\n        allIds: []\n    },\n    customRemoteTracks: {\n        byId: {},\n        byRemoteTrack: {},\n        allIds: []\n    }\n}\n\nconst Context = createContext<StageContext>(InitialState);\n\nconst StageProvider = (props: {\n    children: React.ReactNode,\n    token?: string\n}) => {\n    const {children, token} = props;\n    const [, setSocket] = useState<ITeckosClient>();\n    const [device, setDevice] = useState<Device>();\n\n    // OV related entities\n    const [soundCards, dispatchSoundCard] = useReducer(SoundCardReducer, InitialState.soundCards);\n    const [presets, dispatchPresets] = useReducer(TrackPresetReducer, InitialState.presets);\n    const [tracks, dispatchTracks] = useReducer(TrackReducer, InitialState.tracks);\n\n    // Digital stage related entities\n    const [stageMembers, dispatchStageMembers] = useReducer(StageMemberReducer, InitialState.stageMembers);\n    const [customStageMembers, dispatchCustomStageMembers] = useReducer(CustomStageMemberReducer, InitialState.customStageMembers);\n    const [remoteTracks, dispatchRemoteTracks] = useReducer(RemoteTrackReducer, InitialState.remoteTracks);\n    const [customRemoteTracks, dispatchCustomRemoteTracks] = useReducer(CustomRemoteTrackReducer, InitialState.customRemoteTracks);\n\n    useEffect(() => {\n        // Got token, register self as device\n        const initialDevice: Partial<Device> = {\n            name: 'OV Simulator',\n            canOv: true,\n            canAudio: true,\n            sendAudio: true,\n            receiveAudio: true,\n            soundCardIds: [],\n        };\n\n        const nSocket = new TeckosClientWithJWT(\n            process.env.NEXT_PUBLIC_API_URL,\n            {\n                reconnection: true,\n                timeout: 1000,\n            },\n            token,\n            {\n                device: initialDevice,\n            }\n        );\n\n        nSocket.on(\"connect\", () => {\n            console.log(\"connected!\")\n        });\n\n        nSocket.on(ServerDeviceEvents.LOCAL_DEVICE_READY, (device: Device) => {\n            setDevice(device);\n        })\n\n        nSocket.on(ServerDeviceEvents.SOUND_CARD_ADDED, (payload: SoundCard) => dispatchSoundCard({\n            type: ServerDeviceEvents.SOUND_CARD_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.SOUND_CARD_CHANGED, (payload: SoundCard) => dispatchSoundCard({\n            type: ServerDeviceEvents.SOUND_CARD_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.SOUND_CARD_REMOVED, (payload: string) => dispatchSoundCard({\n            type: ServerDeviceEvents.SOUND_CARD_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerDeviceEvents.TRACK_PRESET_ADDED, (payload: TrackPreset) => dispatchPresets({\n            type: ServerDeviceEvents.TRACK_PRESET_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_PRESET_CHANGED, (payload: TrackPreset) => dispatchPresets({\n            type: ServerDeviceEvents.TRACK_PRESET_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_PRESET_REMOVED, (payload: string) => dispatchPresets({\n            type: ServerDeviceEvents.TRACK_PRESET_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerDeviceEvents.TRACK_ADDED, (payload: Track) => dispatchTracks({\n            type: ServerDeviceEvents.TRACK_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_CHANGED, (payload: Track) => dispatchTracks({\n            type: ServerDeviceEvents.TRACK_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerDeviceEvents.TRACK_REMOVED, (payload: string) => dispatchTracks({\n            type: ServerDeviceEvents.TRACK_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, payload => dispatchStageMembers(addStageMember(payload)));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, payload => dispatchStageMembers(changeStageMember(payload)));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, payload => dispatchStageMembers(removeStageMember(payload)));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_ADDED, (payload: StageMember) => dispatchStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_CHANGED, (payload: StageMember) => dispatchStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_REMOVED, (payload: string) => dispatchStageMembers({\n            type: ServerStageEvents.STAGE_MEMBER_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED, (payload: CustomStageMember) => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED, payload => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED, (payload: string) => dispatchCustomStageMembers({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_ADDED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_CHANGED, (payload: StageMemberOvTrack) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchRemoteTracks({\n            type: ServerStageEvents.STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED, (payload: CustomRemoteOvTrack) => dispatchCustomRemoteTracks({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED, (payload: CustomRemoteOvTrack) => dispatchCustomRemoteTracks({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_CHANGED,\n            payload: payload\n        }));\n        nSocket.on(ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED, (payload: string) => dispatchCustomRemoteTracks({\n            type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_REMOVED,\n            payload: payload\n        }));\n\n        nSocket.on(ServerGlobalEvents.STAGE_JOINED, (payload: InitialStagePackage) => {\n            // Handle package with many stage related entities\n            payload.stageMembers.forEach(stageMember => dispatchStageMembers(addStageMember(stageMember)));\n            payload.customStageMembers.forEach(customStageMember => dispatchCustomStageMembers({\n                type: ServerStageEvents.CUSTOM_STAGE_MEMBER_ADDED,\n                payload: customStageMember\n            }));\n            payload.ovTracks.forEach(ovTrack => dispatchRemoteTracks({\n                type: ServerStageEvents.STAGE_MEMBER_OV_ADDED,\n                payload: ovTrack\n            }));\n            payload.customOvTracks.forEach(customRemoteTrack => dispatchCustomRemoteTracks({\n                type: ServerStageEvents.CUSTOM_STAGE_MEMBER_OV_ADDED,\n                payload: customRemoteTrack\n            }));\n        });\n\n        nSocket.connect();\n\n        setSocket(nSocket);\n    }, [token])\n\n    return (\n        <Context.Provider value={{\n            device,\n            soundCards,\n            presets,\n            tracks,\n            stageMembers,\n            customStageMembers,\n            remoteTracks,\n            customRemoteTracks\n        }}>\n            {children}\n        </Context.Provider>\n    )\n};\n\nexport {\n    StageProvider\n}\n\nconst useStage = (): StageContext => useContext<StageContext>(Context);\nexport default useStage;\n"]},"metadata":{},"sourceType":"module"}